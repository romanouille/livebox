



using "hosts/tr181_hosts.so";

object Hosts {
    uint32 HostNumberOfEntries;
    uint32 X_ORANGE-COM_MaximumHosts;
    object Host [] {
        string Alias;                             /* fake */
        string PhysAddress;                       /* to MACAddress */
        string IPAddress;                         /* OK */
        string AddressSource;                     /* OK */
        int32 LeaseTimeRemaining;                 /* OK */
        string DHCPCLient;                        /* fake */
        string AssociatedDevice;                  /* fake */
        string Layer1Interface;                   /* fake */
        string Layer3Interface;                   /* fake */
        string VendorClassID;                     /* OK */
        string ClientID;                          /* OK */
        string UserClassID;                       /* OK */
        string HostName;                          /* OK */
        bool Active;                              /* OK */

        uint32 IPv4AddressNumberOfEntries;        /* OK */
        object IPv4Address {
            string IPAddress;                     /* OK */
        }
        uint32 IPv6AddressNumberOfEntries;        /* OK */
        object IPv6Address {
            string IPAddress;                     /* OK */
        }
        string VendorClassIDv6;                   /* fake, NOTE: THIS IS NOT PART OF TR181 SO SHOULD HAVE X_ORANGE-COM_! */
        string X_ORANGE-COM_AccessPoint;                  /* fake */
        string X_ORANGE-COM_AccessPointLayer1Interface;   /* fake */
        string X_ORANGE-COM_AccessPointLayer3Interface;   /* fake */
        string X_ORANGE-COM_InterfaceType;                /* OK */
        string X_ORANGE-COM_DetectedDeviceType;           /* fake */
        datetime X_ORANGE-COM_LastConnection;             /* OK */
        string X_ORANGE-COM_UserFriendlyName;             /* fake */
        string X_ORANGE-COM_UserHostName;                 /* fake */
        string X_ORANGE-COM_UserDeviceType;               /* fake */
        string X_ORANGE-COM_Icon;                         /* fake */
        string X_ORANGE-COM_Room;                         /* fake */
        bool X_ORANGE-COM_Blacklisted;                    /* fake */
        bool X_ORANGE-COM_Hidden;                         /* fake */
        object X_ORANGE-COM_DHCPOption {
            string Alias;                         /* fake */
            uint32 Tag;                           /* fake */
            string Value;                         /* fake */
        }
        string X_ORANGE-COM_ManufacturerOUI;              /* OK */
        string X_ORANGE-COM_ProductClass;                 /* OK */
        string X_ORANGE-COM_SerialNumber;                 /* OK */
        string X_ORANGE-COM_HostName;                     /* fake */
        string X_ORANGE-COM_LinkSpeed;                    /* fake */
    }
}

datamodel {
    object Hosts from "pcb://$(PCB_MAIN_BUS)/Hosts" recursive {
            accept parameter"X_ORANGE-COM_MaximumHosts";
            drop parameter "^ManageableDeviceNumberOfEntries$";
            drop function ".*";
            drop object "(Config|ManageableDevice)";
            accept object "^Host$" {

                drop parameter ".*";
                accept object ".*" {
                    accept request parameter "PhysAddress" {
                        rename with rename_HostsPhysAddress_Name;
                    }
                    accept object parameter "MACAddress" {
                        rename with rename_HostsPhysAddress_Name;
                    }

                    accept parameter "X_ORANGE-COM_DetectedTypes";
                    accept parameter "X_ORANGE-COM_DeviceType";
                    accept parameter "X_ORANGE-COM_UPnPFriendlyNames";
                    accept parameter "X_ORANGE-COM_mDNSServiceNames";

                    accept parameter "(IPAddress)";
                    accept parameter "(AddressSource)";
                    accept parameter "(LeaseTimeRemaining)";
                    accept parameter "(VendorClassID)";
                    accept parameter "(ClientID)";
                    accept parameter "(UserClassID)";


                    accept parameter "X_ORANGE-COM_LLTDDevice";


                    accept request parameter "X_ORANGE-COM_HostName" {
                        rename with rename_HostName;
                    }
                    accept object parameter "HostName" {
                        rename with rename_HostName;
                    }

                    accept parameter "(Active)";

                    accept parameter "(IPv4AddressNumberOfEntries)";
                    accept parameter "(IPv6AddressNumberOfEntries)";

                    accept request parameter "X_ORANGE-COM_InterfaceType" {
                        rename with rename_InterfaceType;
                    }
                    accept object parameter "InterfaceType" {
                        rename with rename_InterfaceType;
                    }

                    accept request parameter "X_ORANGE-COM_LastConnection" {
                        rename with rename_LastConnection;
                    }
                    accept object parameter "X_ORANGE-COM_LastChange" {
                        rename with rename_LastConnection;
                    }


                    accept request parameter "X_ORANGE-COM_ManufacturerOUI" {
                        rename with rename_ManufacturerOUI;
                    }
                    accept object parameter "ManufacturerOUI" {
                        rename with rename_ManufacturerOUI;
                    }


                    accept request parameter "X_ORANGE-COM_ProductClass" {
                        rename with rename_ProductClass;
                    }
                    accept object parameter "ProductClass" {
                        rename with rename_ProductClass;
                    }


                    accept request parameter "X_ORANGE-COM_SerialNumber" {
                        rename with rename_SerialNumber;
                    }
                    accept object parameter "SerialNumber" {
                        rename with rename_SerialNumber;
                    }

                    accept parameter "(Tags)";

                    accept parameter "X_ORANGE-COM_mDNSServiceNumberOfEntries";
                    accept parameter "X_ORANGE-COM_UPnPDeviceNumberOfEntries";
                    accept parameter "X_ORANGE-COM_DeviceNamesNumberOfEntries";

                    drop parameter ".*";

                    accept object "IPv4Address";

                    accept object "IPv6Address";

                    accept object "mDNSService";

                    accept object "X_ORANGE-COM_DeviceNames";

                    accept object "UPnP" {
                        accept object "^Device$" {
                            drop parameter ".*";
                            accept object ".*" {
                                accept parameter "(Status|UUID|USN|Location|Server|DeviceType|FriendlyName|Manufacturer|ManufacturerURL|ModelName|ModelURL|PresentationURL)";
                                drop parameter ".*";
                                accept object "^Icon$" {
                                    drop parameter ".*";
                                    accept object ".*" {
                                        accept parameter "(URL|MimeType)";
                                        drop parameter ".*";
                                    }
                                }
                            }
                        }
                    }


                    drop object  ".*";
                }
            }
        }
}






