define(["utils/console","utils/basics","lib/stateManager","app/hubNotInstalledStateCtrl","app/hubNotInstalledStateView","app/hubInstalledStateCtrl","app/hubInstalledStateView","jquery"],function(console,basicUtilities,StateManagerClass,HubNotInstalledStateCtrlClass,HubNotInstalledStateViewClass,HubInstalledStateCtrlClass,HubInstalledStateViewClass,$){"use strict";function MainClass(aSahObj,aConfigObj,aTranslateObj){var fields;fields={sahObj:aSahObj,stateManagerObj:null};fields.stateManagerObj=new StateManagerClass("HubStateApp",aSahObj,aTranslateObj);this.getHubState=function(aCallback){basicUtilities.queue([function(aNext){fields.sahObj.invokeApi("semantic","sah.Device.MediaCloud.getGlobalState",aNext,null)},function(aNext,aResult){if(aResult.status===0){basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("HubStateMainClass: Failed to retrieve mediacloud state");basicUtilities.callback(aCallback,false,0,null)}}],this)};this.run=function(){basicUtilities.queue([function(aNext){fields.stateManagerObj.registerState(aNext,"HubInstalled",HubInstalledStateCtrlClass,HubInstalledStateViewClass,false)},function(aNext,aResult){if(!aResult||aResult.status===0){fields.stateManagerObj.registerState(aNext,"HubNotInstalled",HubNotInstalledStateCtrlClass,HubNotInstalledStateViewClass,false)}else{console.error("MainClass: Internal error. Aborting...")}},function(aNext,aResult){if(!aResult||aResult.status===0){$(window).on("hashchange",{},function(){switch(window.location.hash.substr(1)){case"hubInstalled":fields.stateManagerObj.switchState(null,"HubInstalled",null);break;case"hubNotInstalled":fields.stateManagerObj.switchState(null,"HubNotInstalled",null);break;default:console.error('MainClass: Unknown State "'+window.location.hash.substr(1)+'". Redirecting to MHS');fields.stateManagerObj.requestAppClose(null);break}});basicUtilities.callback(aNext,false,0,null)}else{console.error("MainClass: Internal error. Aborting...")}},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.queue([function(aNext){fields.sahObj.invokeApi("semantic","sah.Device.MediaCloud.getStorage",aNext,null)},function(aNext,aResult){if(aResult.status===0&&aResult.hasOwnProperty("data")&&aResult.data.volumeList.length>0){this.getHubState(aNext)}else{window.location.hash="#hubNotInstalled"}},function(aNext,aResult){if(!aResult||aResult.status===0){if(aResult.data&&aResult.data.isEnabled&&aResult.data.uniqueIdentifier.length>0){window.location.hash="#hubInstalled"}else{window.location.hash="#hubNotInstalled"}basicUtilities.callback(aNext,false,0,null)}else{basicUtilities.callback(aNext,false,-1,null)}}],this)}else{console.error("MainClass: Internal error. Aborting...")}}],this)}}return MainClass});