define(["utils/console","utils/basics","lib/eventHandler","lib/stateViewInterface","jquery","text","templates_app/template","text!bootstrap/bootstrap.css","text!app/config/televisionState.json"],function(console,basicUtilities,EventHandlerClass,StateViewClass,$,Text,TemplateClass,Bootstrap,Config){"use strict";function TelevisionStateViewClass(aStateId,aTranslateObj){var fields;fields={language:{id:"",data:{}}};StateViewClass.call(this,aStateId,aTranslateObj);this.init=function(aCallback){console.debug("TelevisionStateViewClass: Initialising state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.setStyle(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{this.notifyError("TelevisionStateViewClass: Initialising state '"+this.getId()+"'","rra0212");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.quit=function(aCallback){console.debug("TelevisionStateViewClass: Releasing state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.unsetStyle(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{this.notifyError("TelevisionStateViewClass: Releasing state '"+this.getId()+"'","rra0213");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.enable=function(aCallback){console.debug("TelevisionStateViewClass: Enabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.setAppCloseButton(aNext,"app_close")},function(aNext){this.viewDisplayPage(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{this.notifyError("TelevisionStateViewClass: Enabling state '"+this.getId()+"'","rra0214");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.disable=function(aCallback){console.debug("TelevisionStateViewClass: Disabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.viewEmptyPage(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{this.notifyError("TelevisionStateViewClass: Disabling state '"+this.getId()+"'","rra0215");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.stripLines=function(aCallback,aString){basicUtilities.callback(aCallback,false,0,aString.replace(/(\r\n|\n|\r|\t)/gm,""))};this.fillTemplate=function(aCallback,template,context){basicUtilities.queue([function(aNext){this.stripLines(aNext,context)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,template(JSON.parse(aResult.data)))}else{this.notifyError("TelevisionStateViewClass: fillTemplate failed","rra0216");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.setStyle=function(aCallback){basicUtilities.queue([function(aNext){this.stripLines(aNext,Bootstrap)},function(aNext,aResult){if(!aResult||aResult.status===0){if(!$("#app_conf_style_sheet").length){$("head").append('<style id="app_conf_style_sheet">'+aResult.data+"</style>")}if(!$("#bootstrap_style_sheet").length){$("head").append('<style id="bootstrap_style_sheet">'+TemplateClass.style+"</style>")}basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null);this.notifyError("TelevisionStateViewClass: setStyle failed","rra0217")}}],this)};this.unsetStyle=function(aCallback){if($("#app_conf_style_sheet").length){$("head").children("#app_conf_style_sheet").remove()}if($("#bootstrap_style_sheet").length){$("head").children("#bootstrap_style_sheet").remove()}basicUtilities.callback(aCallback,false,0,null)};this.viewEmptyPage=function(aCallback){$(window.document.body).html();basicUtilities.callback(aCallback,false,0,null)};this.viewDisplayPage=function(aCallback){basicUtilities.queue([function(aNext){this.fillTemplate(aNext,TemplateClass.template,Config)},function(aNext,aResult){if(!aResult||aResult.status===0){$(window.document.body).html(aResult.data);this.translate();this.setPageTitle(null,$(".header-title").find("h1").find("span").html());aNext()}else{basicUtilities.callback(aCallback,false,-1,null);this.notifyError("TelevisionStateViewClass: Failed to fill template with config data","rra0218")}},function(){$(".toggleinfo-input").attr("class","col-xs-6 no-padding toggleinfo-input");basicUtilities.callback(aCallback,false,0,null)}],this)};this.displayTVInfo=function(dataObject){console.log(dataObject);var indexSTB,devices,wifiSTB=0,ethSTB=0;if(dataObject.service.state){$(".form-toggleinfo-container span:eq(0)").attr("class","Translation");$(".form-toggleinfo-container span:eq(0)").attr("data-translation","televisionState.state.disponible")}else{$(".form-toggleinfo-container span:eq(0)").attr("class","Translation");$(".form-toggleinfo-container span:eq(0)").attr("data-translation","televisionState.state.indisponible")}$(".toggleinfo-input:eq(1)").attr("class","col-xs-3 no-padding toggleinfo-input");for(indexSTB=0;indexSTB<dataObject.map.deviceList.length;indexSTB+=1){if(dataObject.map.deviceList[indexSTB].deviceType==="SetTopBox"&&dataObject.map.deviceList[indexSTB].isActive){if(dataObject.map.deviceList[indexSTB].linkMode.toLowerCase().indexOf("wifi")>=0){wifiSTB+=1}else{ethSTB+=1}}}devices=wifiSTB+" (Wifi) "+ethSTB+" (ethernet)";$(".form-toggleinfo-container:eq(1)").text(devices);this.translate()}}return TelevisionStateViewClass});