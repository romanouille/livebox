define(["utils/console","utils/basics","lib/stateCtrlInterface"],function(console,basicUtilities,StateCtrlClass){"use strict";function DevicesListDeviceListCtrlClass(aStateId,aStateManager,aSahObj,aViewObj){var fields={currentData:{getTopology:{},getAccessPoints:{},getDeviceSchedule:{},getDeviceInfo:{},getTime:{},isScheduleRelevant:false}},onViewEvent=function(aEventId,aData){if(aEventId==="ViewUpdated"){console.debug("DevicesListDeviceListCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData));basicUtilities.queue([function(aNext){this.getDeviceInfo(aNext,aData.value)},function(aNext,aResult){if(!aResult||aResult.status===0){if(aResult.data.deviceList[0].linkMode.toLowerCase()==="wifi"||aResult.data.deviceList[0].linkMode.toLowerCase()==="ethernet"){fields.currentData.isScheduleRelevant=true;this.getDeviceSchedule(aNext,aData.value)}else{fields.currentData.getDeviceSchedule={};fields.currentData.isScheduleRelevant=false;aNext()}}else{basicUtilities.callback(null,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: getDeviceInfo failed","aba0xxx")}},function(aNext){if(fields.currentData.isScheduleRelevant){this.getTime(aNext)}else{aNext()}},function(aNext,aResult){if(!aResult||aResult.status===0){this.getViewObj().fillDeviceInfo();basicUtilities.callback(null,false,0,null)}else{basicUtilities.callback(null,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: getTime failed","aba0xxx")}}],this)}else if(aEventId==="ViewCancelled"){console.debug("DevicesListDeviceListCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else if(aEventId==="ViewSubmitted"){basicUtilities.queue([function(aNext){if(fields.currentData.isScheduleRelevant){this.setDeviceSchedule(aNext,aData.value.setDeviceScheduleObj)}else{basicUtilities.callback(aNext,false,0,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){this.setDeviceInfo(aNext,aData.value.configureDeviceObj)}else{basicUtilities.callback(null,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: setDeviceSchedule failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){this.disable(aNext);basicUtilities.callback(null,false,0,null)}else{basicUtilities.callback(null,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: setDeviceInfo failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){this.getViewObj().showLoadingScreen();window.setTimeout(function(){this.getViewObj().hideLoadingScreen();this.enable(null)}.bind(this),5e3)}else{basicUtilities.callback(null,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: disable failed","aba0xxx")}}],this);console.debug("DevicesListDeviceListCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else{console.warn("DevicesListDeviceListCtrlClass: Unexpected event '"+aEventId+"'")}};StateCtrlClass.call(this,aStateId,aStateManager,aSahObj,aViewObj);this.init=function(aCallback){console.debug("DevicesListDeviceListCtrlClass: Initialising state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().subscribeEvents(this.getId(),onViewEvent.bind(this));this.getViewObj().init(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: init failed","aba0001")}}],this)};this.quit=function(aCallback){console.debug("DevicesListDeviceListCtrlClass: Releasing state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().quit(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: view quit failed","aba0xxx")}}],this)};this.enable=function(aCallback,aContext){console.debug("DevicesListDeviceListCtrlClass: Enabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){aNext()},function(aNext,aResult){if(!aResult||aResult.status===0){this.getAccessPoints(aNext)}else{console.error("DevicesListDeviceListCtrlClass: Internal error");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: listenEvents failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){this.getTopology(aNext)}else{console.error("DevicesListDeviceListCtrlClass: Internal error");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: getAccessPoints failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){if(typeof aContext==="string"){fields.currentData.targetDeviceId=aContext;this.getViewObj().fields.currentData.targetDeviceId=aContext}this.getViewObj().enable(aNext)}else{console.error("DevicesListDeviceListCtrlClass: Internal error");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: getTopology failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: view enable failed","aba0xxx")}}],this)};this.disable=function(aCallback){console.debug("DevicesListDeviceListCtrlClass: Disabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().disable(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){this.unlistenEvents(aNext)}else{console.error("DevicesListDeviceListCtrlClass: Internal error");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: view disable failed","aba0xxx")}},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: unlistenEvents failed","aba0xxx")}}],this)};this.listenEvents=function(aCallback){basicUtilities.callback(aCallback,false,0,null)};this.unlistenEvents=function(aCallback){basicUtilities.callback(aCallback,false,0,null)};this.getAccessPoints=function(aCallback){var index,rootvap;basicUtilities.queue([function(aNext){this.callSahApi("sah.Connection.Server.WiFi.listAccessPoints",aNext,null)},function(aNext,aResult){if(aResult.status===0){if(aResult.hasOwnProperty("data")){fields.currentData.getAccessPoints=aResult.data;if(fields.currentData.getAccessPoints.hasOwnProperty("accessPointList")){for(index=0;index<fields.currentData.getAccessPoints.accessPointList.length;index=index+1){rootvap=fields.currentData.getAccessPoints.accessPointList[index];if(rootvap.linkType==="WIFI_2.4_PRIVATE"){fields.currentData.private24Id=fields.currentData.getAccessPoints.accessPointList[index].accessPointId;fields.currentData.private24IsEnabled=fields.currentData.getAccessPoints.accessPointList[index].isEnabled}else if(rootvap.linkType==="WIFI_5_PRIVATE"){fields.currentData.private5Id=fields.currentData.getAccessPoints.accessPointList[index].accessPointId;fields.currentData.private5IsEnabled=fields.currentData.getAccessPoints.accessPointList[index].isEnabled}else if(rootvap.linkType==="WIFI_2.4_GUEST"){fields.currentData.guest24Id=fields.currentData.getAccessPoints.accessPointList[index].accessPointId;fields.currentData.guest24IsEnabled=fields.currentData.getAccessPoints.accessPointList[index].isEnabled}else if(rootvap.linkType==="WIFI_5_GUEST"){fields.currentData.guest5Id=fields.currentData.getAccessPoints.accessPointList[index].accessPointId;fields.currentData.guest5IsEnabled=fields.currentData.getAccessPoints.accessPointList[index].isEnabled}}}this.getViewObj().fields.currentData=fields.currentData}basicUtilities.callback(aCallback,false,0,fields.currentData.getAccessPoints)}else{console.warn("DevicesListMapCtrlClass: Failed to retrieve access points");this.getViewObj().notifyError("DevicesListMapCtrlClass: Failed to retrieve access points","aba0xxx");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getTopology=function(aCallback){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.getDeviceMap",aNext,{isActive:true})},function(aNext,aResult){if(aResult.status===0){fields.currentData.getTopology=aResult.data;basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to retrieve topology");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: Failed to retrieve topology","aba0xxx");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getDeviceSchedule=function(aCallback,aDeviceId){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.getDeviceSchedule",aNext,{deviceId:aDeviceId})},function(aNext,aResult){if(aResult.status===0){fields.currentData.getDeviceSchedule=aResult.data;this.getViewObj().fields.currentData.getDeviceSchedule=fields.currentData.getDeviceSchedule;basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to retrieve device schedule");fields.currentData.getDeviceSchedule={};this.getViewObj().fields.currentData.getDeviceSchedule=fields.currentData.getDeviceSchedule;basicUtilities.callback(aCallback,false,0,null)}}],this)};this.setDeviceSchedule=function(aCallback,aObj){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.setDeviceSchedule",aNext,aObj)},function(aNext,aResult){if(aResult.status===0){basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to set device schedule");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: Failed to set device schedule","aba0xxx");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getDeviceInfo=function(aCallback,aDeviceId){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.listDevices",aNext,{deviceId:aDeviceId})},function(aNext,aResult){if(aResult.status===0){fields.currentData.getDeviceInfo=JSON.parse(JSON.stringify(aResult.data));this.getViewObj().fields.currentData.getDeviceInfo=fields.currentData.getDeviceInfo;basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to retrieve device info");fields.currentData.getDeviceInfo={};this.getViewObj().fields.currentData.getDeviceInfo=fields.currentData.getDeviceInfo;this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: Failed to retrieve device info","aba0xxx");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.setDeviceInfo=function(aCallback,aObj){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.configureDevice",aNext,aObj)},function(aNext,aResult){if(aResult.status===0){basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to configure device");this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: Failed to configure device","aba0xxx");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getTime=function(aCallback){basicUtilities.queue([function(aNext){this.callSahApi("sah.Device.Time.getTime",aNext,null)},function(aNext,aResult){if(aResult.status===0){fields.currentData.getTime=aResult.data;this.getViewObj().fields.currentData.getTime=fields.currentData.getTime;basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesListDeviceListCtrlClass: Failed to retrieve time");basicUtilities.callback(aCallback,false,0,null);this.getViewObj().notifyError("DevicesListDeviceListCtrlClass: Failed to retrieve time","aba0xxx")}}],this)}}return DevicesListDeviceListCtrlClass});