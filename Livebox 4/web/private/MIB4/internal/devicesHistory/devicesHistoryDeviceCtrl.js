define(["utils/console","utils/basics","lib/stateCtrlInterface"],function(console,basicUtilities,StateCtrlClass){"use strict";function DevicesHistoryDeviceCtrlClass(aStateId,aStateManager,aSahObj,aViewObj){var fields={currentData:{getDeviceSchedule:{}}},onViewEvent=function(aEventId,aData){if(aEventId==="ViewUpdated"){console.debug("DevicesHistoryDeviceCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else if(aEventId==="ViewCancelled"){this.goToMain();console.debug("DevicesHistoryDeviceCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else if(aEventId==="ViewSubmitted"){basicUtilities.queue([function(aNext){this.setDeviceSchedule(aNext,aData.value.setDeviceScheduleObj)},function(aNext,aResult){if(!aResult||aResult.status===0){this.setDeviceInfo(aNext,aData.value.configureDeviceObj)}else{basicUtilities.callback(null,false,-1,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){this.disable(aNext);basicUtilities.callback(null,false,0,null)}else{basicUtilities.callback(null,false,-1,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){this.enable(aNext)}else{basicUtilities.callback(null,false,-1,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){this.goToMain()}else{basicUtilities.callback(null,false,-1,null)}}],this);console.debug("DevicesHistoryDeviceCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else{console.warn("DevicesHistoryDeviceCtrlClass: Unexpected event '"+aEventId+"'")}};StateCtrlClass.call(this,aStateId,aStateManager,aSahObj,aViewObj);this.init=function(aCallback){console.debug("DevicesHistoryDeviceCtrlClass: Initialising state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().subscribeEvents(this.getId(),onViewEvent.bind(this));this.getViewObj().init(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.quit=function(aCallback){console.debug("DevicesHistoryDeviceCtrlClass: Releasing state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().quit(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.enable=function(aCallback,aContext){console.debug("DevicesHistoryDeviceCtrlClass: Enabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){aNext()},function(aNext,aResult){if(!aResult||aResult.status===0){if(typeof aContext==="string"){fields.currentData.targetDeviceId=aContext;this.getViewObj().fields.currentData.targetDeviceId=aContext}this.getViewObj().enable(aNext)}else{console.error("DevicesHistoryDeviceCtrlClass: Internal error")}},function(aNext,aResult){if(!aResult||aResult.status===0){this.getDeviceSchedule(aNext,window.device.deviceId)}else{basicUtilities.callback(aNext,false,-1,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.disable=function(aCallback){console.debug("DevicesHistoryDeviceCtrlClass: Disabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().disable(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getDeviceSchedule=function(aCallback,aDeviceId){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.getDeviceSchedule",aNext,{deviceId:aDeviceId})},function(aNext,aResult){if(aResult.status===0){fields.currentData.getDeviceSchedule=aResult.data;this.getViewObj().schedulerActive(fields.currentData.getDeviceSchedule);basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesHistoryDeviceCtrlClass: Failed to retrieve device schedule");fields.currentData.getDeviceSchedule={};this.getViewObj().schedulerActive(fields.currentData.getDeviceSchedule);basicUtilities.callback(aCallback,false,0,null)}}],this)};this.setDeviceSchedule=function(aCallback,aObj){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.setDeviceSchedule",aNext,aObj)},function(aNext,aResult){if(aResult.status===0){basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesHistoryDeviceCtrlClass: Failed to set device schedule");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.setDeviceInfo=function(aCallback,aObj){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.configureDevice",aNext,aObj)},function(aNext,aResult){if(aResult.status===0){basicUtilities.callback(aCallback,false,0,aResult.data)}else{console.warn("DevicesHistoryDeviceCtrlClass: Failed to configure device");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.goToMain=function(){aStateManager.switchState(null,"DevicesHistory",null)}}return DevicesHistoryDeviceCtrlClass});