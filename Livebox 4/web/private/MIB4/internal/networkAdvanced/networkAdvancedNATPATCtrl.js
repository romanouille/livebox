define(["utils/console","utils/basics","lib/stateCtrlInterface"],function(console,basicUtilities,StateCtrlClass){"use strict";function NetworkAdvancedNATPATCtrlClass(aStateId,aStateManager,aSahObj,aViewObj){var fields={},globalResult={},forbiddenPort=[1701,1812,1813],onViewEvent=function(aEventId,aData){if(aEventId==="ViewUpdated"){console.debug("NetworkAdvancedNATPATCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData))}else if(aEventId==="ViewCancelled"){console.debug("NetworkAdvancedNATPATCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData));this.quit()}else if(aEventId==="ViewSubmitted"){console.debug("NetworkAdvancedNATPATCtrlClass: View event '"+aEventId+"' with data "+JSON.stringify(aData));if(aData.action==="crÃ©er"){this.addRule(null,aData.name,aData.isEnabled,aData.protocole,aData.internalPortRange,aData.externalPortRange,aData.ipAddress)}else if(aData.action==="supprimer"){this.deleteRule(null,aData.name,aData.protocole,aData.target,aData.internalPort,aData.externalPort)}else if(aData.action==="maj"){this.updateRule(null,aData.name,aData.isEnabled)}if(aData.state==="DHCP"){window.location.hash="#DHCP"}else if(aData.state==="NATPAT"){window.location.hash="#NATPAT"}else if(aData.state==="DNS"){window.location.hash="#DNS"}else if(aData.state==="UPnP"){window.location.hash="#UPnP"}else if(aData.state==="DynDNS"){window.location.hash="#DynDNS"}else if(aData.state==="DMZ"){window.location.hash="#DMZ"}else if(aData.state==="NTP"){window.location.hash="#NTP"}}else{console.warn("NetworkAdvancedNATPATCtrlClass: Unexpected event '"+aEventId+"'")}};StateCtrlClass.call(this,aStateId,aStateManager,aSahObj,aViewObj);this.init=function(aCallback){console.debug("NetworkAdvancedNATPATCtrlClass: Initialising state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().subscribeEvents(this.getId(),onViewEvent.bind(this));this.getViewObj().init(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.quit=function(aCallback){console.debug("NetworkAdvancedNATPATCtrlClass: Releasing state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().quit(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.enable=function(aCallback){console.debug("NetworkAdvancedNATPATCtrlClass: Enabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().enable(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){this.getDeviceList(aNext)}else{basicUtilities.callback(aNext,false,0,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){this.getRulesList(aNext)}else{basicUtilities.callback(aNext,false,0,null)}},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.disable=function(aCallback){console.debug("NetworkAdvancedNATPATCtrlClass: Disabling state '"+this.getId()+"'");basicUtilities.queue([function(aNext){this.getViewObj().disable(aNext)},function(aNext,aResult){if(!aResult||aResult.status===0){basicUtilities.callback(aCallback,false,0,null)}else{basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getDeviceList=function(aCallback){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.NetworkMap.listDevices",aNext,{filter:{linkModeList:["ETHERNET","WIFI"],isActive:true}})},function(aNext,aResult){if(!aResult||aResult.status===0){globalResult.devicesList=aResult.data.deviceList;this.getViewObj().InputInit(globalResult.devicesList);basicUtilities.callback(aCallback,false,0,null)}else{this.getViewObj().notifyError("NetworkAdvancedNATPATCtrlClass: Failed to get devices list","yke0001");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.addRule=function(aCallback,name,isEnabled,protocole,internal,external,ip){basicUtilities.queue([function(aNext){this.getViewObj().displayNATPortIntError(true);this.getViewObj().displayNATPortExtError(true);this.getViewObj().displayNatFtpError(true);if(name!==""){if(this.quickCheckPortValue(internal,external)){this.callSahApi("sah.HomeNetwork.Firewall.NatPatIpv4.addRule",aNext,{name:name,isEnabled:isEnabled,protocol:protocole,externalPortRange:external.toString(),internalPortRange:internal.toString(),ipAddress:ip})}}else{this.getViewObj().displayNatFtpError(false,"invalidName")}},function(aNext,aResult){if(!aResult||aResult.status===0){var index;this.getRulesList(aCallback)}else{this.getViewObj().notifyError("NetworkAdvancedNATPATCtrlClass: Failed to add new rule","yke0002");if(aResult.status===-1){if(aResult.hasOwnProperty("data")){if(aResult.data.hasOwnProperty("errors")){if(aResult.data.errors.length>0){if(aResult.data.errors.length>0){for(index=0;index<aResult.data.errors.length;index=index+1){if(aResult.data.errors[index].error.toString()==="1114117"){this.getViewObj().displayNATPortIntError(false,"invalidPort");this.getViewObj().displayNATPortExtError(false,"invalidPort")}else if(aResult.data.errors[index].error.toString()==="1114119"){}else if(aResult.data.errors[index].error.toString()==="1114120"){this.getViewObj().displayNatFtpError(false,"conflictingRule")}}}}}}}basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.getRulesList=function(aCallback){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.Firewall.NatPatIpv4.listRules",aNext,null)},function(aNext,aResult){var i;if(!aResult||aResult.status===0){globalResult.rulesList=aResult.data.userRules;if(globalResult.rulesList.length>0){this.getViewObj().displayInfo(globalResult.rulesList)}basicUtilities.callback(aCallback,false,0,null)}else{this.getViewObj().notifyError("Failed to get rules list","yke0003");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.deleteRule=function(aCallback,name,protocole,target,internal,external){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.Firewall.NatPatIpv4.deleteRule",aNext,{name:name,protocol:protocole})},function(aNext,aResult){if(!aResult||aResult.status===0){this.getViewObj().deleteCurrentRow(target);basicUtilities.callback(aCallback,false,0,null)}else{this.getViewObj().notifyError("NetworkAdvancedNATPATCtrlClass: Failed to delete rule","yke0004");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.updateRule=function(aCallback,name,isEnabled){basicUtilities.queue([function(aNext){this.callSahApi("sah.HomeNetwork.Firewall.NatPatIpv4.setRuleState",aNext,{name:name,isEnabled:isEnabled})},function(aNext,aResult){if(!aResult||aResult.status===0){globalResult.rulesList=aResult.data.userRules;if(globalResult.rulesList.length>0){this.getViewObj().displayInfo(globalResult.rulesList)}basicUtilities.callback(aCallback,false,0,null)}else{this.getViewObj().notifyError("NetworkAdvancedNATPATCtrlClass: Failed to update rule state","yke0005");basicUtilities.callback(aCallback,false,-1,null)}}],this)};this.quickCheckPortValue=function(internalValue,externalValue){var proceed=true,externalValueArray=[],minExternalValue,maxExternalValue;this.getViewObj().displayNATPortIntError(true);this.getViewObj().displayNATPortExtError(true);if(parseInt(internalValue,10)>65535||parseInt(internalValue,10)<0||internalValue.split("-").length>1){proceed=false;this.getViewObj().displayNATPortIntError(false,"invalidPort")}if(externalValue.split("-").length===2){externalValueArray=externalValue.split("-");if(externalValueArray[0]<externalValueArray[1]){minExternalValue=parseInt(externalValueArray[0],10);maxExternalValue=parseInt(externalValueArray[1],10)}else{maxExternalValue=parseInt(externalValueArray[0],10);minExternalValue=parseInt(externalValueArray[1],10)}if(minExternalValue>65535||minExternalValue<0||maxExternalValue>65535||maxExternalValue<0){proceed=false;this.getViewObj().displayNATPortExtError(false,"invalidPort")}if(1701<=maxExternalValue&&1701>=minExternalValue||1812<=maxExternalValue&&1812>=minExternalValue||1813<=maxExternalValue&&1813>=minExternalValue){proceed=false;this.getViewObj().displayNATPortExtError(false,"reservedPort")}}else{if(parseInt(externalValue,10)>65535||parseInt(externalValue,10)<0){proceed=false;this.getViewObj().displayNATPortExtError(false,"invalidPort")}if(parseInt(externalValue,10)===1701||parseInt(externalValue,10)===1812||parseInt(externalValue,10)===1813){proceed=false;this.getViewObj().displayNATPortExtError(false,"reservedPort")}}return proceed}}return NetworkAdvancedNATPATCtrlClass});