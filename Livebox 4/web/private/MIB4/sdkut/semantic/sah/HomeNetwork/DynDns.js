define(["utils/console","engine/callStack"],function(console,callStack){"use strict";return{listServices:{name:"Retrieves the list of supported services",description:"This method lists the DynDNS services that are supported.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,listservice,indService;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data.services={serviceList:[]};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DynDns.listServices","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){listservice=aResult.data;this.fields.data.services.serviceList=[];for(indService=0;indService<listservice.length;indService+=1){this.fields.data.services.serviceList.push(listservice[indService])}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data.services){result.data=this.fields.data.services}callStack.popAll("api",result,this.fields.uuid)}}}},addUserAccount:{name:"Adds a new user account",description:"This method adds a new user account for one of the supported services.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var inputArg,inputObj,undef;if(aStep==="0"){this.fields.nbStep=0;this.fields.mxStep=0;this.fields.status=0;this.fields.uuid=aResult.uuid;inputArg=aResult.inputList[0];if(inputArg!==undef&&Object.typeOf(inputArg.service)==="string"&&Object.typeOf(inputArg.login)==="string"&&Object.typeOf(inputArg.password)==="string"&&Object.typeOf(inputArg.hostname)==="string"){this.fields.mxStep+=1;inputObj={service:inputArg.service,username:inputArg.login,hostname:inputArg.hostname,password:inputArg.password};callStack.push("api","pcb.DynDns.addHost","1",this,inputObj)}else{callStack.logMessage("SYN_BAD_ARGS","Wrong type of argument.");this.fields.status=-1;this.fields.mxStep=0}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data===false){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){callStack.popAll("api",{status:this.fields.status},this.fields.uuid)}}},deleteUserAccount:{name:"Deletes a user account",description:"This method deletes a user account on a supported service.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var aHostname,inputObj;if(aStep==="0"){this.fields.nbStep=0;this.fields.mxStep=0;this.fields.status=0;this.fields.uuid=aResult.uuid;aHostname=aResult.inputList[0];if(Object.typeOf(aHostname)==="string"){this.fields.mxStep+=1;inputObj={hostname:aHostname};callStack.push("api","pcb.DynDns.delHost","1",this,inputObj)}else{callStack.logMessage("SYN_BAD_ARGS","Wrong type of argument.");this.fields.status=-1;this.fields.mxStep=0}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data===false){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){callStack.popAll("api",{status:this.fields.status},this.fields.uuid)}}},listUserAccount:{name:"List user accounts",description:"This method lists the user accounts for one of the supported services.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,objHost,listHost,indHost;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data.account={accountList:[]};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DynDns.listHosts","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){listHost=aResult.data;this.fields.data.account.accountList=[];for(indHost=0;indHost<listHost.length;indHost+=1){objHost={};objHost.service=listHost[indHost].service;objHost.hostname=listHost[indHost].hostname;objHost.login=listHost[indHost].username;objHost.password=listHost[indHost].password;objHost.lastUpdate=listHost[indHost].last_update;this.fields.data.account.accountList.push(objHost)}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data.account){result.data=this.fields.data.account}callStack.popAll("api",result,this.fields.uuid)}}}},getState:{name:"Returns the current state of the DynDNS",description:"This method returns the current state of the DynDNS.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.data={isActivated:false};callStack.push("api","pcb.DynDns.getGlobalEnable","1",this)}else{if(aStep==="1"){this.fields.nbStep+=1;if(aResult.status===0||typeof aResult.status==="boolean"){this.fields.data.isActivated=aResult.data}else{this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}}else{console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setState:{name:"Updates the state of the DynDNS",description:"This method updates the state of the DynDNS.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.initialParameters=aResult.inputList[0];this.fields.mxStep+=1;if(this.fields.initialParameters.isActivated){callStack.push("api","pcb.DynDns.setGlobalEnable","1",this,{enable:true})}else{callStack.push("api","pcb.DynDns.setGlobalEnable","1",this,{enable:false})}}else{if(aStep==="1"){this.fields.nbStep+=1;if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}}else{console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}});