define(["utils/console","engine/callStack"],function(console,callStack){"use strict";return{getConfiguration:{name:"Retrieves the current configuration of the DHCP server",description:"This method returns the current configuration of the DHCP server.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,output;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.NMC.getLANIP","1",this,{})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){output=aResult.data;console.log(output);this.fields.data.isDhcpEnabled=output.DHCPEnable;this.fields.data.ipAddress=output.Address;this.fields.data.mask=output.Netmask;this.fields.data.minIpAddress=output.DHCPMinAddress;this.fields.data.maxIpAddress=output.DHCPMaxAddress;this.fields.mxStep+=1;callStack.push("api","pcb.DHCPv4.Server.getServerPool","2",this,{id:"default"})}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.data.leaseTime=aResult.data.default.LeaseTime}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}},setConfiguration:{name:"Updates the configuration of the DHCP server",description:"This method sets the configuration of the DHCP server.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var inputArg,inputObj,result;if(aStep==="0"){this.fields.nbStep=0;this.fields.mxStep=0;this.fields.status=0;this.fields.uuid=aResult.uuid;inputArg=aResult.inputList[0];if(Object.typeOf(inputArg.leaseTime)==="number"){this.fields.leaseTime=inputArg.leaseTime}if(Object.typeOf(inputArg.isDhcpEnabled)==="boolean"&&Object.typeOf(inputArg.ipAddress)==="string"&&Object.typeOf(inputArg.mask)==="string"&&Object.typeOf(inputArg.minIpAddress)==="string"&&Object.typeOf(inputArg.maxIpAddress)==="string"){inputObj={Address:inputArg.ipAddress,Netmask:inputArg.mask,DHCPEnable:inputArg.isDhcpEnabled,DHCPMinAddress:inputArg.minIpAddress,DHCPMaxAddress:inputArg.maxIpAddress};console.log(inputObj);this.fields.mxStep+=1;callStack.push("api","pcb.NMC.setLANIP","1",this,inputObj)}else{callStack.logMessage("SYN_BAD_ARGS","Wrong type of argument.");this.fields.status=-1;this.fields.mxStep=0}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(Object.typeOf(this.fields.leaseTime)==="number"){this.fields.mxStep+=1;callStack.push("api","pcb.DHCPv4.Server.setLeaseTime","2",this,"default",{leasetime:this.fields.leaseTime})}}else{if(aResult.errors){this.fields.data.errors=aResult.errors}callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"2":if(aResult.status!==0&&aResult.status!==true){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},listStaticLeases:{name:"List Static Lease of the DHCP server",description:"This method lists static lease of the DHCP server",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result,indexStaticLease;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.data.staticLeaseList=[];this.fields.mxStep+=1;callStack.push("api","pcb.DHCPv4.Server.getStaticLeases","1",this,"default")}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){for(indexStaticLease=0;indexStaticLease<aResult.data.length;indexStaticLease+=1){this.fields.data.staticLeaseList.push({deviceId:aResult.data[indexStaticLease].MACAddress,ipAddress:aResult.data[indexStaticLease].IPAddress})}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},addStaticLease:{name:"Add Static Lease of the DHCP server",description:"This method add static lease of the DHCP server",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];callStack.push("api","pcb.DHCPv4.Server.addStaticLease","1",this,"default",{MACAddress:this.fields.initialParameters.deviceId,IPAddress:this.fields.initialParameters.ipAddress})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){if(aResult.errors){this.fields.data.errors=aResult.errors}this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},deleteStaticLease:{name:"Delete Static Lease of the DHCP server",description:"This method deletes static lease of the DHCP server",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];callStack.push("api","pcb.DHCPv4.Server.deleteStaticLease","1",this,"default",{MACAddress:this.fields.initialParameters.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}});