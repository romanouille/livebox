define(["utils/console","engine/callStack"],function(console,callStack){"use strict";var isStaticLease=function(macAddress,listStaticLeases){var indexStaticLease=0;while(indexStaticLease<listStaticLeases.length&&listStaticLeases[indexStaticLease].MACAddress.toLowerCase()!==macAddress.toLowerCase()){indexStaticLease+=1}if(indexStaticLease===listStaticLeases.length){return false}return true},hasGuestIpAddress=function(aIp,aMinIp,aMaxIp){var result,aIpAddressTab,aMinIpAddressTab,aMaxIpAddressTab;result=false;if(aIp&&aMinIp&&aMaxIp){aIpAddressTab=aIp.split(".");aMinIpAddressTab=aMinIp.split(".");aMaxIpAddressTab=aMaxIp.split(".");if(aIpAddressTab.length===4){if(aIpAddressTab[0]!==aMinIpAddressTab[0]||aIpAddressTab[1]!==aMinIpAddressTab[1]||aIpAddressTab[2]!==aMinIpAddressTab[2]){result=false}else if(Number(aIpAddressTab[3])>=Number(aMinIpAddressTab[3])&&Number(aIpAddressTab[3])<=Number(aMaxIpAddressTab[3])){result=true}}}return result},isScheduled=function(macAddress,listSchedule){if(typeof macAddress==="undefined"){return false}var indexSchedule=0;while(indexSchedule<listSchedule.length&&listSchedule[indexSchedule].ID.toLowerCase()!==macAddress.toLowerCase()){indexSchedule+=1}if(indexSchedule===listSchedule.length){return false}return listSchedule[indexSchedule].enable},hasTags=function(tags,tags2){var index,index2,checksum,tagsToCheck,objTags;function onlyUnique(value,index,self){return self.indexOf(value)===index}if(typeof tags==="undefined"||tags===""){return false}tagsToCheck=tags.split(" ").filter(onlyUnique);objTags=tags2.split(" ").filter(onlyUnique);if(tagsToCheck.length===0||objTags.length===0){return false}checksum=tagsToCheck.length;for(index=0;index<tagsToCheck.length;index=index+1){for(index2=0;index2<objTags.length;index2=index2+1){if(tagsToCheck[index]===objTags[index2]){checksum=checksum-1;break}}}if(checksum===0){return true}return false},returnDeviceTypeByTags=function(tags){var knownDeviceTypes={},key;for(key in knownDeviceTypes){if(knownDeviceTypes.hasOwnProperty(key)){if(hasTags(tags,knownDeviceTypes[key])){return key}}}return"UNKNOWN"},returnLinkModeByTags=function(tags){var knownLinkModes={ETHERNET:"eth edev",WIFI:"wifi edev",CATIQ2:"dect voice handset physical",USB:"usb physical edev",FXS:"voice handset physical"},key;for(key in knownLinkModes){if(knownLinkModes.hasOwnProperty(key)){if(hasTags(knownLinkModes[key],tags)){return key}}}return"UNKNOWN"},exploreTopology=function(topologyTab,topology,accessPointsInfo,filterActive){var index,index2,indexvap,vapfound,myDevice,myDevice2,currentDevice,isUSBDevice;for(index=0;index<topology.length;index=index+1){myDevice={};myDevice2={};isUSBDevice=false;currentDevice=topology[index];if(currentDevice.DiscoverySource==="selflan"&&hasTags("self lan bridge mac nemo interface ipv4 ipv6",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;vapfound=false;if(currentDevice.hasOwnProperty("Children")){if(currentDevice.Children.length>0){for(index2=0;index2<currentDevice.Children.length;index2=index2+1){for(indexvap=0;indexvap<accessPointsInfo.length;indexvap=indexvap+1){if(currentDevice.Children[index2].Key===accessPointsInfo[indexvap].accessPointId){vapfound=true;if(accessPointsInfo[indexvap].linkType.toLowerCase().indexOf("guest")>-1){myDevice.deviceType="guestIntf"}else{myDevice.deviceType="lanIntf"}break}}if(vapfound){break}}}else{continue}}else{continue}}else if(currentDevice.DiscoverySource==="selflan"&&hasTags("self lan vap wifi nemo interface",currentDevice.Tags)){vapfound=false;for(indexvap=0;indexvap<accessPointsInfo.length;indexvap=indexvap+1){if(accessPointsInfo[indexvap].accessPointId===currentDevice.Key){vapfound=true;myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;if(currentDevice.OperatingFrequencyBand.toLowerCase()===accessPointsInfo[indexvap].frequencyBand.toLowerCase()){if(currentDevice.OperatingFrequencyBand.toLowerCase().indexOf("2.4ghz")>-1){if(accessPointsInfo[indexvap].linkType.toLowerCase().indexOf("private")>-1){myDevice.deviceType="portIntf_private_wifi24"}else if(accessPointsInfo[indexvap].linkType.toLowerCase().indexOf("guest")>-1){myDevice.deviceType="portIntf_guest_wifi24"}else{myDevice.deviceType="portIntf_wifi24"}}else if(currentDevice.OperatingFrequencyBand.toLowerCase().indexOf("5ghz")>-1){if(accessPointsInfo[indexvap].linkType.toLowerCase().indexOf("private")>-1){myDevice.deviceType="portIntf_private_wifi5"}else if(accessPointsInfo[indexvap].linkType.toLowerCase().indexOf("guest")>-1){myDevice.deviceType="portIntf_guest_wifi5"}else{myDevice.deviceType="portIntf_wifi5"}}else{vapfound=false;console.warn("Unexpected mismatch: frequencyBand of '"+currentDevice.Key+"' is unknown")}}else{vapfound=false;console.warn("Unexpected mismatch: frequencyBand of '"+currentDevice.Key+"' does not match with known data")}break}}if(!vapfound){console.warn("Unexpected mismatch: '"+currentDevice.Key+"' does not match with known WiFi VAPs");continue}}else if(currentDevice.DiscoverySource==="selflan"&&hasTags("self lan eth nemo interface",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;myDevice.deviceType="portIntf"}else if(currentDevice.DiscoverySource==="selfusb"&&hasTags("self usb port interface sysbus",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;myDevice.deviceType="portIntf"}else if(currentDevice.DiscoverySource==="selfusb"&&hasTags("self usb interface sysbus",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;myDevice.deviceType="usbIntf"}else if(currentDevice.DiscoverySource==="voice_handsets"&&hasTags("voice interface dect physical",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;myDevice.deviceType="dectIntf"}else if(currentDevice.DiscoverySource==="voice_handsets"&&hasTags("voice interface physical",currentDevice.Tags)){myDevice.deviceId=currentDevice.Key;myDevice.linkMode="";myDevice.deviceName=currentDevice.Name;myDevice.deviceType="fxsIntf"}else{if(typeof filterActive==="boolean"){if(filterActive!==currentDevice.Active&&!(currentDevice.DiscoverySource==="selfhgw"&&hasTags("self hgw physical wan",currentDevice.Tags))){continue}}myDevice.deviceId=currentDevice.Key;myDevice.deviceName=currentDevice.Name;if(currentDevice.DeviceType!==""){myDevice.deviceType=currentDevice.DeviceType}else if(currentDevice.DiscoverySource==="selfhgw"&&hasTags("self hgw physical wan",currentDevice.Tags)){myDevice.deviceType="HGW"}else if(currentDevice.DiscoverySource==="upnpDev"&&hasTags("upnp root logical",currentDevice.Tags)){continue}else{myDevice.deviceType=returnDeviceTypeByTags(currentDevice.Tags)}myDevice.linkMode=returnLinkModeByTags(currentDevice.Tags);if(myDevice.linkMode==="ETHERNET"){myDevice.ETHERNET={};myDevice.ETHERNET.ethernetPortId=currentDevice.Layer2Interface;myDevice.ETHERNET.interfaceName=currentDevice.InterfaceName;myDevice.ETHERNET.macAddress=currentDevice.PhysAddress;if(currentDevice.hasOwnProperty("IPV4Address")){if(currentDevice.IPv4Address.length>0){myDevice.ETHERNET.ipIpv4=currentDevice.IPv4Address[0].Address}}if(currentDevice.hasOwnProperty("IPv6Address")){if(currentDevice.IPv6Address.length>0){myDevice.ETHERNET.ipIpv6=currentDevice.IPv6Address[0].Address}}}else if(myDevice.linkMode==="WIFI"){myDevice.WIFI={};myDevice.WIFI.accessPointId=currentDevice.Layer2Interface;myDevice.WIFI.interfaceName=currentDevice.InterfaceName;myDevice.WIFI.macAddress=currentDevice.PhysAddress;if(currentDevice.hasOwnProperty("IPv4Address")){if(currentDevice.IPv4Address.length>0){myDevice.WIFI.ipIpv4=currentDevice.IPv4Address[0].Address}}if(currentDevice.hasOwnProperty("IPv6Address")){if(currentDevice.IPv6Address.length>0){myDevice.WIFI.ipIpv6=currentDevice.IPv6Address[0].Address}}}else if(myDevice.linkMode==="CATIQ2"){myDevice.CATIQ2={};if(currentDevice.hasOwnProperty("DirectoryNumber")){myDevice.CATIQ2.internalPhoneNumber=currentDevice.DirectoryNumber}}else if(myDevice.linkMode==="FXS"){myDevice.FXS={};if(currentDevice.hasOwnProperty("DirectoryNumber")){myDevice.FXS.internalPhoneNumber=currentDevice.DirectoryNumber}}else if(myDevice.linkMode==="USB"){myDevice.USB={};isUSBDevice=true}}if(currentDevice.hasOwnProperty("Children")&&!isUSBDevice){if(currentDevice.Children.length>0){myDevice.children=[];if(myDevice.deviceType.toLowerCase().indexOf("homeplug")>-1){myDevice2.deviceId=currentDevice.Key+"_CPL";myDevice2.linkMode="";myDevice2.deviceName="CPL";myDevice2.deviceType="portIntf_cpl";myDevice2.children=[];myDevice.children.push(myDevice2);exploreTopology(myDevice.children[myDevice.children.length-1].children,currentDevice.Children,accessPointsInfo,filterActive);topologyTab.push(myDevice)}else{exploreTopology(myDevice.children,currentDevice.Children,accessPointsInfo,filterActive);topologyTab.push(myDevice)}}else{topologyTab.push(myDevice)}}else{topologyTab.push(myDevice)}}},fillDevice=function(aInputDevice,aFields){var undef,objDevice,indName,index,lineFound;objDevice={};objDevice.deviceId=aInputDevice.Key;objDevice.linkMode="";if(aInputDevice.Tags.indexOf("eth")>=0&&aInputDevice.Tags.indexOf("edev")>=0){objDevice.linkMode="ETHERNET"}if(aInputDevice.Tags.indexOf("printer")>=0&&aInputDevice.Tags.indexOf("physical")>=0){objDevice.linkMode="PRINTER"}if(aInputDevice.Tags.indexOf("wifi")>=0&&aInputDevice.Tags.indexOf("edev")>=0){objDevice.linkMode="WIFI"}if(aInputDevice.Tags.indexOf("voice")>=0&&aInputDevice.Tags.indexOf("handset")>=0&&aInputDevice.Tags.indexOf("physical")>=0){if(aInputDevice.Tags.indexOf("dect")>0){objDevice.linkMode="CATIQ2"}else{objDevice.linkMode="FXS"}}if(aInputDevice.Tags.indexOf("usb")>=0&&aInputDevice.Tags.indexOf("wwan")>=0){objDevice.linkMode="DONGLE"}objDevice.isActive=aInputDevice.Active;objDevice.useSchedule=isScheduled(aInputDevice.PhysAddress,aFields.listSchedule);objDevice.deviceType=aInputDevice.DeviceType;objDevice.deviceName=aInputDevice.Name;objDevice.lastConnection=aInputDevice.LastConnection||"";objDevice.upnpName="";objDevice.dnsName="";if(aInputDevice.Names!==undef){for(indName=0;indName<aInputDevice.Names.length;indName+=1){if(aInputDevice.Names[indName].Source==="dns"){objDevice.dnsName=aInputDevice.Names[indName].Name}if(aInputDevice.Names[indName].Source==="upnp"){objDevice.upnpName=aInputDevice.Names[indName].Name}}}objDevice.ETHERNET={};objDevice.WIFI={};objDevice.CATIQ2={};objDevice.FXS={};objDevice.PRINTER={};objDevice.DONGLE={};if(objDevice.linkMode==="ETHERNET"){objDevice.ETHERNET.ethernetPortId="";objDevice.ETHERNET.interfaceName="";objDevice.ETHERNET.macAddress="";objDevice.ETHERNET.ipIpv4="";objDevice.ETHERNET.ipIpv6="";objDevice.ETHERNET.ethernetPortId=aInputDevice.Layer2Interface;objDevice.ETHERNET.interfaceName=aInputDevice.InterfaceName||"";objDevice.ETHERNET.macAddress=aInputDevice.PhysAddress;if(aInputDevice.IPv4Address&&aInputDevice.IPv4Address.length>0){objDevice.ETHERNET.ipIpv4=aInputDevice.IPv4Address[0].Address}if(aInputDevice.IPv6Address&&aInputDevice.IPv6Address.length>0){objDevice.ETHERNET.ipIpv6=aInputDevice.IPv6Address[0].Address}objDevice.ETHERNET.ipAddressSource="dynamic";if(aInputDevice.IPAddressSource==="Static"){objDevice.ETHERNET.ipAddressSource="staticOnClientSide"}else if(aInputDevice.IPAddressSource==="DHCP"){if(hasGuestIpAddress(objDevice.ETHERNET.ipIpv4,aFields.guestMinIpAddress,aFields.guestMaxIpAddress)){if(isStaticLease(aInputDevice.PhysAddress,aFields.guestStaticLeases)){objDevice.ETHERNET.ipAddressSource="staticOnServerSide"}}else if(isStaticLease(aInputDevice.PhysAddress,aFields.listStaticLeases)){objDevice.ETHERNET.ipAddressSource="staticOnServerSide"}}}else if(objDevice.linkMode==="WIFI"){objDevice.WIFI.accessPointId="";objDevice.WIFI.interfaceName="";objDevice.WIFI.macAddress="";objDevice.WIFI.ipIpv4="";objDevice.WIFI.ipIpv6="";objDevice.WIFI.accessPointId=aInputDevice.Layer2Interface;objDevice.WIFI.interfaceName=aInputDevice.InterfaceName||"";objDevice.WIFI.macAddress=aInputDevice.PhysAddress;if(aInputDevice.IPv4Address&&aInputDevice.IPv4Address.length>0){objDevice.WIFI.ipIpv4=aInputDevice.IPv4Address[0].Address}if(aInputDevice.IPv6Address&&aInputDevice.IPv6Address.length>0){objDevice.WIFI.ipIpv6=aInputDevice.IPv6Address[0].Address}objDevice.WIFI.ipAddressSource="dynamic";if(aInputDevice.IPAddressSource==="Static"){objDevice.WIFI.ipAddressSource="staticOnClientSide"}else if(aInputDevice.IPAddressSource==="DHCP"){if(hasGuestIpAddress(objDevice.ETHERNET.ipIpv4,aFields.guestMinIpAddress,aFields.guestMaxIpAddress)){if(isStaticLease(aInputDevice.PhysAddress,aFields.guestStaticLeases)){objDevice.WIFI.ipAddressSource="staticOnServerSide"}}else if(isStaticLease(aInputDevice.PhysAddress,aFields.listStaticLeases)){objDevice.WIFI.ipAddressSource="staticOnServerSide"}}}else if(objDevice.linkMode==="CATIQ2"){objDevice.CATIQ2.internalPhoneNumberList=[];lineFound=false;for(indName=0;indName<aFields.trunksObj.length;indName=indName+1){if(lineFound){break}if(aFields.trunksObj[indName].hasOwnProperty("trunk_lines")){for(index=0;index<aFields.trunksObj[indName].trunk_lines.length;index=index+1){if(aFields.trunksObj[indName].trunk_lines[index].name===aInputDevice.OutgoingTrunkLine&&aFields.trunksObj[indName].trunk_lines[index].hasOwnProperty("directoryNumber")){objDevice.CATIQ2.internalPhoneNumberList=aFields.trunksObj[indName].trunk_lines[index].directoryNumber.split(",").slice(0);lineFound=true;break}}}}}else if(objDevice.linkMode==="FXS"){objDevice.FXS.internalPhoneNumberList=[];lineFound=false;for(indName=0;indName<aFields.trunksObj.length;indName=indName+1){if(lineFound){break}if(aFields.trunksObj[indName].hasOwnProperty("trunk_lines")){for(index=0;index<aFields.trunksObj[indName].trunk_lines.length;index=index+1){if(aFields.trunksObj[indName].trunk_lines[index].name===aInputDevice.OutgoingTrunkLine&&aFields.trunksObj[indName].trunk_lines[index].hasOwnProperty("directoryNumber")){objDevice.FXS.internalPhoneNumberList=aFields.trunksObj[indName].trunk_lines[index].directoryNumber.split(",").slice(0);lineFound=true;break}}}}}else if(objDevice.linkMode==="PRINTER"){objDevice.PRINTER.port=aInputDevice.Port||"";objDevice.PRINTER.manufacturer=aInputDevice.Manufacturer||"";objDevice.PRINTER.serialNumber=aInputDevice.SerialNumber||""}else if(objDevice.linkMode==="DONGLE"){objDevice.DONGLE.port="";objDevice.DONGLE.port=aInputDevice.Port}return objDevice};return{listDevices:{name:"Returns devices available in the local network",description:"This method returns the list of the devices available in the local network",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,undef,objDevice,listDevice,indDevice,expression,isActive,indLinkMode,interfaceFilter,indLinkType,modeList,lDevice,indAccessPoint,key,indInterface,listInterface,linkMode={ETHERNET:"eth",WIFI:"wifi",CATIQ2:"dect && voice && handset && physical",FXS:"voice && handset && physical",PRINTER:"printer",DONGLE:"usb && wwan"},linkType={ETHERNET_DHCP:"","WIFI_2.4_PRIVATE":"",WIFI_5_PRIVATE:"","WIFI_2.4_GUEST":"",WIFI_5_GUEST:"",WIFI_OPEN_HOTSPOT:"",WIFI_SECURE_HOTSPOT:""};if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data.devices={deviceList:[]};this.fields.data.inputArg=aResult.inputList[0];this.fields.listStaticLeases=[];this.fields.guestStaticLeases=[];this.fields.guestMinIpAddress="";this.fields.guestMaxIpAddress="";this.fields.listSchedule=[];this.fields.linkType={};this.fields.trunksObj={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.Scheduler.getCompleteSchedules","1",this,{type:"ToD"})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.listSchedule=aResult.data.scheduleInfo;this.fields.mxStep+=1;callStack.push("api","pcb.DHCPv4.Server.getStaticLeases","2",this,"default")}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.listStaticLeases=aResult.data;this.fields.mxStep+=1;if(callStack.getCapabilities().hasGuestNetwork){callStack.push("api","pcb.DHCPv4.Server.getStaticLeases","3",this,"guest")}else{callStack.reCall(this,"4",0)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status===true){this.fields.guestStaticLeases=aResult.data;this.fields.mxStep+=1;callStack.push("api","pcb.NMC.guestGet","4",this,{})}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(aResult&&(aResult.status===0||aResult.status===true)){this.fields.guestMinIpAddress=aResult.data.DHCPMinAddress;this.fields.guestMaxIpAddress=aResult.data.DHCPMaxAddress}this.fields.mxStep+=1;callStack.push("semantic","sah.Connection.Server.WiFi.listAccessPoints","5",this);break;case"5":if(aResult.status===0||aResult.status===true){for(indAccessPoint=0;indAccessPoint<aResult.data.accessPointList.length;indAccessPoint+=1){result=aResult.data.accessPointList[indAccessPoint];this.fields.linkType[result.linkType]=result.accessPointId}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listTrunks","6",this)}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"6":if(aResult.status===0||aResult.status===true){this.fields.trunksObj=JSON.parse(JSON.stringify(aResult.data));this.fields.mxStep+=1;callStack.push("api","pcb.NeMo.listLan","7",this,{mibs:"eth"})}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"7":if(!aResult||aResult.status===0||aResult.status===true){linkType=this.fields.linkType;linkType.ETHERNET_DHCP="";for(key in aResult.data.eth){if(aResult.data.eth.hasOwnProperty(key)){linkType.ETHERNET_DHCP+=key+","}}if(this.fields.data.inputArg!==undef&&Object.typeOf(this.fields.data.inputArg)==="object"){this.fields.mxStep+=1;if(this.fields.data.inputArg.deviceId===undef||this.fields.data.inputArg.deviceId.length<=0){if(Object.typeOf(this.fields.data.inputArg.filter)==="object"&&this.fields.data.inputArg.filter.isActive!==undef&&Object.typeOf(this.fields.data.inputArg.filter.isActive)==="boolean"&&this.fields.data.inputArg.filter.linkModeList===undef&&this.fields.data.inputArg.filter.linkTypeList===undef){callStack.push("api","pcb.Devices.getDevice","10",this,{expression:".Active=="+this.fields.data.inputArg.filter.isActive})}else if(Object.typeOf(this.fields.data.inputArg.filter)==="object"&&this.fields.data.inputArg.filter.linkModeList!==undef&&this.fields.data.inputArg.filter.linkModeList.length>0){expression={};isActive=true;if(this.fields.data.inputArg.filter.isActive!==undef&&Object.typeOf(this.fields.data.inputArg.filter.isActive)==="boolean"){isActive=this.fields.data.inputArg.filter.isActive;for(indLinkMode=0;indLinkMode<this.fields.data.inputArg.filter.linkModeList.length;indLinkMode+=1){expression[this.fields.data.inputArg.filter.linkModeList[indLinkMode]]=linkMode[this.fields.data.inputArg.filter.linkModeList[indLinkMode]]+" and .Active=="+isActive}}else{for(indLinkMode=0;indLinkMode<this.fields.data.inputArg.filter.linkModeList.length;indLinkMode+=1){expression[this.fields.data.inputArg.filter.linkModeList[indLinkMode]]=linkMode[this.fields.data.inputArg.filter.linkModeList[indLinkMode]]}}callStack.push("api","pcb.Devices.getDevice","8",this,{expression:expression})}else if(Object.typeOf(this.fields.data.inputArg.filter)==="object"&&Object.typeOf(this.fields.data.inputArg.filter.linkTypeList)==="array"&&this.fields.data.inputArg.filter.linkTypeList.length>=0){interfaceFilter="(";for(indLinkType=0;indLinkType<this.fields.data.inputArg.filter.linkTypeList.length;indLinkType+=1){listInterface=[];if(typeof linkType[this.fields.data.inputArg.filter.linkTypeList[indLinkType]]!=="undefined"){listInterface=linkType[this.fields.data.inputArg.filter.linkTypeList[indLinkType]].split(",")}for(indInterface=0;indInterface<listInterface.length;indInterface+=1){if(listInterface[indInterface]!==""){interfaceFilter+=".InterfaceName=="+listInterface[indInterface];if(indInterface<listInterface.length-1&&listInterface[indInterface+1]!==""||indLinkType<this.fields.data.inputArg.filter.linkTypeList.length-1){interfaceFilter+=" or "}}}}if(this.fields.data.inputArg.filter.isActive!==undef&&Object.typeOf(this.fields.data.inputArg.filter.isActive)==="boolean"){interfaceFilter+=") and .Active=="+this.fields.data.inputArg.filter.isActive}callStack.push("api","pcb.Devices.getDevice","10",this,{expression:interfaceFilter})}else{callStack.logMessage("SYN_BAD_ARGS","Wrong type of argument.");this.fields.status=-1;this.fields.mxStep=0}}else{callStack.push("api","pcb.Devices.getADevice","9",this,this.fields.data.inputArg.deviceId,{})}}else{this.fields.mxStep+=1;callStack.push("api","pcb.Devices.getDevice","10",this,{})}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"8":if(aResult.status===0||aResult.status===true){listDevice=aResult.data;this.fields.data.devices.deviceList=[];for(modeList in listDevice){if(listDevice.hasOwnProperty(modeList)){for(indDevice=0;indDevice<listDevice[modeList].length;indDevice+=1){objDevice=fillDevice(listDevice[modeList][indDevice],this.fields);if(objDevice.linkMode!==""){this.fields.data.devices.deviceList.push(objDevice)}}}}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"9":if(aResult.status===0||aResult.status===true){this.fields.data.devices.deviceList[0]=fillDevice(aResult.data,this.fields)}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"10":if(aResult.status===0||aResult.status===true){listDevice=aResult.data;this.fields.data.devices.deviceList=[];lDevice=[];for(indDevice=0;indDevice<listDevice.length;indDevice+=1){this.fields.data.devices.deviceList.push(fillDevice(listDevice[indDevice],this.fields))}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data.devices){result.data=this.fields.data.devices}callStack.popAll("api",result,this.fields.uuid)}}},getDeviceMap:{name:"Returns the network map of the devices",description:"This method returns the network map of the devices available in the local network",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:[],initialParameters:{}},call:function(aStep,aResult){var result=[],radioAccessPointLinkAssociation;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters={};if(typeof aResult.inputList[0]!=="undefined"){if(aResult.inputList[0].hasOwnProperty("isActive")){if(typeof aResult.inputList[0].isActive==="boolean"){this.fields.initialParameters.isActive=aResult.inputList[0].isActive}}}if(!callStack.cache.get("radioAccessPointLinkAssociation")){callStack.push("semantic","sah.Connection.Server.WiFi.listAccessPoints","1",this,{})}else{callStack.reCall(this,"2",0)}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":this.fields.mxStep+=1;callStack.push("api","pcb.Topology.build","3",this,{discoveryMode:"Absolute"});break;case"3":if(aResult.status===0||aResult.status===true){if(aResult.hasOwnProperty("data")){radioAccessPointLinkAssociation=callStack.cache.get("radioAccessPointLinkAssociation");if(aResult.data.length>0){this.fields.data=[];if(this.fields.initialParameters.hasOwnProperty("isActive")){exploreTopology(this.fields.data,aResult.data,radioAccessPointLinkAssociation,this.fields.initialParameters.isActive)}else{exploreTopology(this.fields.data,aResult.data,radioAccessPointLinkAssociation)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getUploadConfiguration:{name:"Retrieves configuration for network map transfer",description:"This method configures device parameters",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result=[];if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.Topology.get","1",this,{})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data.hasOwnProperty("CustomerAuthorization")){if(aResult.data.CustomerAuthorization){this.fields.data.isAllowed=true}else{this.fields.data.isAllowed=false}this.fields.mxStep+=1;callStack.push("api","pcb.Topology.isAutomaticUploadEnabled","2",this,{})}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.hasOwnProperty("data")){if(aResult.data){this.fields.data.isAutomaticUploadEnabled=true}else{this.fields.data.isAutomaticUploadEnabled=false}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setUploadConfiguration:{name:"Updates configuration for network map transfer",description:"This method configures device parameters",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;if(aResult.inputList.length>0){this.fields.initialParameters=aResult.inputList[0];if(this.fields.initialParameters.hasOwnProperty("isAllowed")){if(typeof this.fields.initialParameters.isAllowed==="boolean"){callStack.push("api","pcb.Topology.setCustomerAuthorization","1",this,{allowed:this.fields.initialParameters.isAllowed})}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},uploadDeviceMap:{name:"Transfers network map",description:"This method transfers a network map.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.Topology.upload","1",this,{})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},configureDevice:{name:"Configure device parameters",description:"This method configures device parameters",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];if(typeof this.fields.initialParameters.deviceId==="string"&&(typeof this.fields.initialParameters.useSchedule==="boolean"||typeof this.fields.initialParameters.deviceType==="string"||typeof this.fields.initialParameters.deviceName==="string"||typeof this.fields.initialParameters.dnsName==="string")){if(typeof this.fields.initialParameters.deviceName==="string"){callStack.push("api","pcb.Devices.setDeviceName","1",this,this.fields.initialParameters.deviceId,{name:this.fields.initialParameters.deviceName})}else if(typeof this.fields.initialParameters.deviceType==="string"){callStack.reCall(this,"2",0)}else if(typeof this.fields.initialParameters.dnsName==="string"){callStack.reCall(this,"3",0)}else{callStack.reCall(this,"4",0)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult&&aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}else{if(typeof this.fields.initialParameters.deviceType==="string"){this.fields.mxStep+=1;callStack.push("api","pcb.Devices.setDeviceType","3",this,this.fields.initialParameters.deviceId,{type:this.fields.initialParameters.deviceType})}else{this.fields.mxStep+=1;callStack.reCall(this,"3",0)}}break;case"3":if(aResult&&aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}else{if(typeof this.fields.initialParameters.dnsName==="string"){this.fields.mxStep+=1;callStack.push("api","pcb.Devices.setDnsName","4",this,this.fields.initialParameters.deviceId,{name:this.fields.initialParameters.dnsName,source:"dns"})}else{this.fields.mxStep+=1;callStack.reCall(this,"4",0)}}break;case"4":if(aResult&&aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}else{if(typeof this.fields.initialParameters.useSchedule==="boolean"){this.fields.mxStep+=1;callStack.push("api","pcb.Scheduler.enableSchedule","5",this,{type:"ToD",ID:this.fields.initialParameters.deviceId,enable:this.fields.initialParameters.useSchedule})}}break;case"5":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},forgetInactiveDevices:{name:"Forget inactive device instance",description:"This method removes an instance of an inactive device",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;
if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];if(this.fields.initialParameters){if(this.fields.initialParameters.deviceIdList){if(this.fields.initialParameters.deviceIdList.length>0){callStack.reCall(this,"1",0)}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.initialParameters.deviceIdList.length>0){this.fields.mxStep+=1;callStack.push("api","pcb.Devices.getADevice","2",this,this.fields.initialParameters.deviceIdList[0])}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;if(aResult.data){if(aResult.data.Active===false){callStack.push("api","pcb.Devices.destroyDevice","3",this,{key:this.fields.initialParameters.deviceIdList[0]})}else{this.fields.mxStep+=1;this.fields.initialParameters.deviceIdList.shift();callStack.reCall(this,"1",0)}}else{this.fields.mxStep+=1;this.fields.initialParameters.deviceIdList.shift();callStack.reCall(this,"1",0)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status===true){if(this.fields.initialParameters.deviceIdList.length>0){this.fields.mxStep+=1;this.fields.initialParameters.deviceIdList.shift();callStack.reCall(this,"1",0)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},forgetAllInactiveDevices:{name:"Forget all inactive devices",description:"This method removes all inactive devices",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result,indexDevice;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.deviceIdList=[];callStack.push("api","pcb.Devices.getDevice","1",this,{expression:"physical and .Active==false"})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data.length>0){this.fields.mxStep+=1;for(indexDevice=0;indexDevice<aResult.data.length;indexDevice+=1){this.fields.deviceIdList.push(aResult.data[indexDevice].Key)}callStack.push("semantic","sah.HomeNetwork.NetworkMap.forgetInactiveDevices","2",this,{deviceIdList:this.fields.deviceIdList})}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getDeviceSchedule:{name:"Return the schedule info",description:"This method returns the schedule info used for all devices",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result,intermediateResult=[],completeResult,i;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];callStack.push("api","pcb.Scheduler.getSchedule","1",this,{type:"ToD",ID:this.fields.initialParameters.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data.scheduleInfo){completeResult=aResult.data.scheduleInfo.schedule;for(i=0;i<completeResult.length;i+=1){intermediateResult.push({start:completeResult[i].begin,end:completeResult[i].end})}}this.fields.data={deviceId:aResult.data.scheduleInfo.ID,scheduleList:intermediateResult}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setDeviceSchedule:{name:"Set the devices schedule info",description:"This method sets the devices schedule info used for all radios",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result,i;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];this.fields.scheduleInfoToAdd={};callStack.push("api","pcb.Scheduler.getSchedule","1",this,{type:"ToD",ID:this.fields.initialParameters.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;this.fields.scheduleInfoToAdd.base="Weekly";this.fields.scheduleInfoToAdd.def="Enable";this.fields.scheduleInfoToAdd.ID=this.fields.initialParameters.deviceId;this.fields.scheduleInfoToAdd.schedule=[];if(aResult.data.scheduleInfo){this.fields.scheduleInfoToAdd.enable=aResult.data.scheduleInfo.enable;this.fields.scheduleInfoToAdd.override=aResult.data.scheduleInfo.override}else{this.fields.scheduleInfoToAdd.enable=false;this.fields.scheduleInfoToAdd.override=""}for(i=0;i<this.fields.initialParameters.scheduleList.length;i+=1){this.fields.scheduleInfoToAdd.schedule.push({state:"Disable",begin:this.fields.initialParameters.scheduleList[i].start,end:this.fields.initialParameters.scheduleList[i].end})}callStack.push("api","pcb.Scheduler.addSchedule","2",this,{type:"ToD",info:this.fields.scheduleInfoToAdd})}else{this.fields.mxStep+=1;this.fields.scheduleInfoToAdd.base="Weekly";this.fields.scheduleInfoToAdd.def="Enable";this.fields.scheduleInfoToAdd.ID=this.fields.initialParameters.deviceId;this.fields.scheduleInfoToAdd.schedule=[];this.fields.scheduleInfoToAdd.enable=false;this.fields.scheduleInfoToAdd.override="";for(i=0;i<this.fields.initialParameters.scheduleList.length;i+=1){this.fields.scheduleInfoToAdd.schedule.push({state:"Disable",begin:this.fields.initialParameters.scheduleList[i].start,end:this.fields.initialParameters.scheduleList[i].end})}callStack.push("api","pcb.Scheduler.addSchedule","2",this,{type:"ToD",info:this.fields.scheduleInfoToAdd})}break;case"2":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},removeDeviceSchedule:{name:"Remove the schedule info used for a given device",description:"This method removes the schedule info used for a given device",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},initialParameters:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];callStack.push("api","pcb.Scheduler.getSchedule","1",this,{type:"ToD",ID:this.fields.initialParameters.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.push("api","pcb.Scheduler.removeSchedule","2",this,{type:"ToD",ID:this.fields.initialParameters.deviceId})}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},pingDevice:{name:"Remove the schedule info used for a given device",description:"This method removes the schedule info used for a given device",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,initialParameters;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.data={hasSucceeded:false,ipIpv4:"",packetsSent:0,packetsFailed:0,packetSize:0,averageTime:0};initialParameters=aResult.inputList[0];if(typeof initialParameters!=="undefined"&&typeof initialParameters.ipIpv4==="string"){this.fields.mxStep+=1;callStack.push("api","pcb.IPPingDiagnostics.execDiagnostic","1",this,{ipHost:initialParameters.ipIpv4})}else{callStack.logMessage("SYN_BAD_ARGS","Missing mandatory parameters");this.fields.status=-1}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data={hasSucceeded:aResult.data.DiagnosticsState==="Success"?true:false,ipIpv4:aResult.data.ipHost,packetsSent:aResult.data.packetsSuccess+aResult.data.packetsFailed,packetsFailed:aResult.data.packetsFailed,packetSize:aResult.data.packetSize,averageTime:aResult.data.averageResponseTime}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}});