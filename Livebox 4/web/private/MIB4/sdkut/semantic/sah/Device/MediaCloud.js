define(["utils/console","engine/callStack"],function(console,callStack){"use strict";return{getVersion:{name:"Retrieves the version of the MediaCloud service and device",description:"This method returns the versions of the MediaCloud service and device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.getStatus","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data.softwareVersion=aResult.data.softwareVersion;this.fields.data.apiVersion=aResult.data.apiVersion;this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getDiskUri","2",this)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.data.storage={};this.fields.data.storage.deviceId=aResult.data.uri;this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getDiskInfo","3",this,{uri:this.fields.data.storage.deviceId})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status===true){this.fields.data.storage.name="Hub";this.fields.data.storage.vendor=aResult.data.vendor;this.fields.data.storage.model=aResult.data.model;this.fields.data.storage.serialNumber=aResult.data.serialNumber;this.fields.data.storage.connectionType=aResult.data.firmwareVersion;this.fields.data.storage.isRemovable=aResult.data.removable;this.fields.data.storage.capacity=parseInt(aResult.data.capacity/1e3,10)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},countUsers:{name:"Counts the number of users of the MediaCloud device",description:"This method returns the number of users of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.listUsers","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data.nbUsers=aResult.data.listOfUsers.length}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getUsersEvents:{name:"Lists user events of the MediaCloud device",description:"This method lists the user event of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.listUsers","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data.nbUsers=aResult.data.listOfUsers.length}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},listUsers:{name:"Lists users of the MediaCloud device",description:"This method lists the user of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,userItem,indexUser=0,undef;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.data.userList=[];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.getUserInfo","1",this,{username:"*"})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data.userInfoList!==undef){for(indexUser=0;indexUser<aResult.data.userInfoList.length;indexUser+=1){userItem={userId:aResult.data.userInfoList[indexUser].username,name:aResult.data.userInfoList[indexUser].friendlyName,type:aResult.data.userInfoList[indexUser].accountType,status:aResult.data.userInfoList[indexUser].accountStatus,isRemoteAccessEnabled:aResult.data.userInfoList[indexUser].remoteFSAccessState==="enable",usedSpace:aResult.data.userInfoList[indexUser].usedDiskSpace,usedCommonSpace:aResult.data.userInfoList[indexUser].usedDiskSpaceCommon};this.fields.data.userList.push(userItem)}}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},configureUser:{name:"Configure a user of the MediaCloud device",description:"This method configures a user of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;this.fields.initialParameters=aResult.inputList[0];if(typeof this.fields.initialParameters.userId==="string"&&(typeof this.fields.initialParameters.isEnabled==="boolean"||typeof this.fields.initialParameters.isRemoteAccessEnabled==="boolean"||typeof this.fields.initialParameters.password==="string")){if(typeof this.fields.initialParameters.password==="string"){callStack.push("api","pcb.DataHub.changeUserPassword","1",this,{username:this.fields.initialParameters.userId,password:this.fields.initialParameters.password})}if(typeof this.fields.initialParameters.isEnabled==="boolean"){callStack.reCall(this,"3",0)}else{callStack.reCall(this,"2",0)}}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(typeof this.fields.initialParameters.isRemoteAccessEnabled==="boolean"){this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.setUserState","3",this,{username:this.fields.initialParameters.userId,remoteFSAccessState:this.fields.initialParameters.isRemoteAccessEnabled?"enable":"disable"})}break;case"3":if(typeof this.fields.initialParameters.isEnabled==="boolean"){this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.setUserState","4",this,{username:this.fields.initialParameters.userId,state:this.fields.initialParameters.isEnabled?"enable":"disable"})}break;case"4":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=0;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},addUser:{name:"Add a user to the MediaCloud device",description:"This method lists the user of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,inputObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;result=aResult.inputList[0];if(callStack.isOnHgw()){inputObj={username:result.userId,password:result.password};this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.addUser","1",this,inputObj)}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data=aResult.data}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=-1}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if((this.fields.status===0||this.fields.status===true)&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},deleteUser:{name:"Delete a user to the MediaCloud device",description:"his method deletes a user to the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,inputObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;result=aResult.inputList[0];if(callStack.isOnHgw()){inputObj={username:result.userId};this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.removeUser","1",this,inputObj)}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=-1}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if((this.fields.status===0||this.fields.status===true)&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getGlobalState:{name:"Retrieves the global state of the MediaCloud device",description:"This method returns the global state of the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,indexDevice=0;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={softwareVersion:"",isEnabled:false,status:"",device:{},content:{totalItem:0,nbVideoItem:0,nbAudioItem:0,nbImageItem:0,nbOtherItem:0}};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.uri="";this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getPhysicalMedium","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){while(indexDevice<aResult.data.length&&(aResult.data[indexDevice].status!=="Online"||aResult.data[indexDevice].connectionType.indexOf("SATA")<0)){indexDevice+=1}if(indexDevice<aResult.data.length){this.fields.uri=aResult.data[indexDevice].uri}this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.uri!==""){this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getDiskInfo","3",this,{uri:this.fields.uri})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status){this.fields.data.device.status=aResult.data.status==="Online"?"ok":"error";this.fields.data.device.capacity=parseInt(aResult.data.capacity/1e3,10);this.fields.data.device.temperature=aResult.data.temperature;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.getStatus","4",this)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(aResult.status===0||aResult.status){this.fields.data.softwareVersion=aResult.data.softwareVersion;this.fields.data.isEnabled=aResult.data.adminStatus==="enabled";this.fields.data.status=aResult.data.operationalStatus;this.fields.data.uniqueIdentifier=aResult.data.uniqueIdentifier}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getStorage:{name:"Lists available storage devices",description:"This method returns the list of all available storage devices.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,partitionList,objPartition,indPartition=0,indexDevice=0;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.uri="";this.fields.data.volumeList=[];this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getPhysicalMedium","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){while(indexDevice<aResult.data.length&&(aResult.data[indexDevice].status!=="Online"||aResult.data[indexDevice].connectionType.indexOf("SATA")<0)){indexDevice+=1}if(indexDevice<aResult.data.length){this.fields.uri=aResult.data[indexDevice].uri}this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.uri!==""){this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getDiskInfo","3",this,{uri:this.fields.uri})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status){this.fields.data.deviceId=this.fields.uri;this.fields.data.name="Hub";this.fields.data.vendor=aResult.data.vendor;this.fields.data.model=aResult.data.model;this.fields.data.serialNumber=aResult.data.serialNumber;this.fields.data.connectionType=aResult.data.firmwareVersion;this.fields.data.isRemovable=aResult.data.removable;this.fields.data.capacity=parseInt(aResult.data.capacity/1e3,10);partitionList=aResult.data.partitionList;for(indPartition=0;indPartition<partitionList.length;indPartition+=1){objPartition={volumeId:partitionList[indPartition].uuid,name:partitionList[indPartition].label,fileSystem:partitionList[indPartition].fileSystemType,totalSpace:parseInt(partitionList[indPartition].capacity/1e3,10),usedSpace:parseInt(partitionList[indPartition].usedSpace/1e3,10),freeSpace:parseInt(partitionList[indPartition].capacity/1e3,10)-parseInt(partitionList[indPartition].usedSpace/1e3,10),isMounted:"",mountPoint:""};this.fields.data.volumeList.push(objPartition)}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},startFormatting:{name:"Starts formatting the MediaCloud device",description:"This method starts formatting the MediaCloud device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,indexDevice=0;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.uri="";this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getPhysicalMedium","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){while(indexDevice<aResult.data.length&&(aResult.data[indexDevice].status!=="Online"||aResult.data[indexDevice].connectionType.indexOf("SATA")<0)){indexDevice+=1}if(indexDevice<aResult.data.length){this.fields.uri=aResult.data[indexDevice].uri}this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.uri!==""){this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.restorePhysicalMedium","3",this,{uri:this.fields.uri})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getFormattingState:{name:"Returns the current state of a format operation",description:"This method returns the current state of a format operation.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},configObj:null},call:function(aStep,aResult){var result,indexDevice=0;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.data.isRunning=true;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.uri="";this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getPhysicalMedium","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){while(indexDevice<aResult.data.length&&(aResult.data[indexDevice].status!=="Online"||aResult.data[indexDevice].connectionType.indexOf("SATA")<0)){indexDevice+=1}if(indexDevice<aResult.data.length){this.fields.uri=aResult.data[indexDevice].uri}this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.uri!==""){this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getDiskInfo","3",this,{uri:this.fields.uri})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":this.fields.data.deviceId=this.fields.uri;if((aResult.status===0||aResult.status===true)&&aResult.data.hasOwnProperty("partitionList")&&aResult.data.partitionList.length>0){this.fields.data.isRunning=aResult.data.partitionList[0].label!=="Orange"}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},unmount:{name:"Returns the current state of a format operation",description:"This method returns the current state of a format operation.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,indexDevice=0;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.uri="";this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getPhysicalMedium","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){while(indexDevice<aResult.data.length&&(aResult.data[indexDevice].status!=="Online"||aResult.data[indexDevice].connectionType.indexOf("SATA")<0)){indexDevice+=1}if(indexDevice<aResult.data.length){this.fields.uri=aResult.data[indexDevice].uri}this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.uri!==""){this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.ejectPhysicalVolume","3",this,{uri:this.fields.uri})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status!==0&&!aResult.status){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getServiceState:{name:"Retrieves the state of the MediaCloud service",description:"This method returns the state of the MediaCloud service.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DataHub.getStatus","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status){this.fields.data.isEnabled=aResult.data.adminStatus==="enabled";this.fields.data.provisioningStatus=aResult.data.provisioningStatus}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setServiceState:{name:"Updates the state of the MediaCloud service",description:"This method updates the state of the MediaCloud service.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},configObj:null},call:function(aStep,aResult){var result,isEnabled;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;isEnabled=aResult.inputList[0].isEnabled;callStack.push("api","pcb.DataHub.setStatus","1",this,{status:isEnabled?"enabled":"disable"})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&!aResult.status){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},reset:{name:"reset the state of the MediaCloud service",description:"This method reset the state of the MediaCloud service.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},configObj:null},call:function(aStep,aResult){var result,mode;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;mode=aResult.inputList[0].mode;callStack.push("api","pcb.DataHub.reset","1",this,{mode:mode})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&!aResult.status){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}});