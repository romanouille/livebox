define(["utils/console","utils/basics","engine/callStack"],function(console,basicUtilities,callStack){"use strict";return{getServerState:{name:"Returns a basic dect description",description:"This method returns a basic description of the dect.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,voip,phoneTrunk,indTrunk,indLine;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={isAvailable:false,phoneNumber:"",protocol:"",vlan:"",vpvc:""};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.NMC.getVoIPConfig","1",this);this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listTrunks","2",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){voip=aResult.data;if(voip[0].Enable==="Enabled"){if(voip[0].PhysInterface==="DSL"){this.fields.data.vpvc=voip[0].InterfaceId}else{this.fields.data.vlan=voip[0].InterfaceId}this.fields.data.protocol="sip"}else if(voip[1].Enable==="Enabled"){if(voip[1].PhysInterface==="DSL"){this.fields.data.vpvc=voip[1].InterfaceId}else{this.fields.data.vlan=voip[1].InterfaceId}this.fields.data.protocol="h323"}}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0||aResult.status===true){phoneTrunk=aResult.data;if(phoneTrunk!==undefined){for(indTrunk=0;indTrunk<phoneTrunk.length;indTrunk+=1){for(indLine=0;indLine<phoneTrunk[indTrunk].trunk_lines.length;indLine+=1){if(phoneTrunk[indTrunk].trunk_lines[indLine].status==="Up"&&phoneTrunk[indTrunk].trunk_lines[indLine].enable==="Enabled"){this.fields.data.phoneNumber=phoneTrunk[indTrunk].trunk_lines[indLine].directoryNumber;this.fields.data.isAvailable=true}}}}}else{callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if((this.fields.status===0||this.fields.status===true)&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getDectBaseInformation:{name:"Returns a basic dect description",description:"This method returns a basic description of the dect.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={name:"",catIqVersion:"",firmwareVersion:"",rfpi:"",pairingPinCode:""};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DECT.getName","1",this);this.fields.mxStep+=1;callStack.push("api","pcb.DECT.getPIN","2",this);this.fields.mxStep+=1;callStack.push("api","pcb.DECT.getRFPI","3",this);this.fields.mxStep+=1;callStack.push("api","pcb.DECT.getVersion","4",this);this.fields.mxStep+=1;callStack.push("api","pcb.DECT.getStandardVersion","5",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){if(aResult.data&&aResult.data===""){this.fields.status=-1}else{this.fields.data.name=aResult.data}}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.data.pairingPinCode=aResult.data}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status===true){this.fields.data.rfpi=aResult.data}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(aResult.status===0||aResult.status===true){this.fields.data.firmwareVersion=aResult.data}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"5":if(aResult.status===0||aResult.status===true){this.fields.data.catIqVersion=aResult.data}else{callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},resetDectBase:{name:"resetDectBase",description:"resetDectBase",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DECT.reset","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setDectBasePairingPinCode:{name:"setDectBasePairingPinCode",description:"setDectBasePairingPinCode",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.data=null;this.fields.mxStep+=1;callStack.push("api","pcb.DECT.setPIN","1",this,{pin:configObj.pairingPinCode})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},startRingTest:{name:"startRingTest",description:"startRingTest",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;configObj=aResult.inputList[0];if(configObj&&configObj.ringtone){callStack.push("api","pcb.VoiceService.ring","1",this,{ringtone:configObj.ringtone})}else{callStack.push("api","pcb.VoiceService.ring","1",this)}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},startDectPairing:{name:"startDectPairing",description:"startDectPairing",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DECT.startPairing","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},stopDectPairing:{name:"stopDectPairing",description:"stopDectPairing",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.DECT.stopPairing","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.mxStep=-1;this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},deleteDect:{name:"deleteDect",description:"deleteDect",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.data=null;this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.deleteHandset","1",this,{line:configObj.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getPhoneMap:{name:"Returns a description of the phone map.",description:"This method returns a description of the phone map.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},deviceIdList:null,connectionIdList:null,groupIdList:null},call:function(aStep,aResult){var result,indDevice,indTrunk,indLine,indGroup,phoneTrunk,phoneDevice,phoneGroup,epNames;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.deviceIdList=[];this.fields.connectionIdList=[];this.fields.groupIdList={};this.fields.data={protocol:"sip",isEnabled:false,deviceList:[],connectionList:[],incomingList:{},outgoingList:{}};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listHandsets","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){phoneDevice=aResult.data;if(phoneDevice!==undefined){for(indDevice=0;indDevice<phoneDevice.length;indDevice+=1){if(phoneDevice[indDevice].endpointType==="FXS"||phoneDevice[indDevice].endpointType==="CATIQ2"){this.fields.data.deviceList.push({deviceId:phoneDevice[indDevice].line,deviceType:phoneDevice[indDevice].endpointType,isEnabled:phoneDevice[indDevice].enable==="Enabled",state:phoneDevice[indDevice].status==="Up"?"UP":"DOWN",userFriendlyName:phoneDevice[indDevice].name,internalPhoneNumber:phoneDevice[indDevice].directoryNumber});this.fields.deviceIdList.push(phoneDevice[indDevice].line);this.fields.data.outgoingList[phoneDevice[indDevice].line]=[phoneDevice[indDevice].outgoingTrunkLine]}}}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listTrunks","2",this)}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"2":if(aResult.status===0||aResult.status===true){phoneTrunk=aResult.data;if(phoneTrunk!==undefined){for(indTrunk=0;indTrunk<phoneTrunk.length;indTrunk+=1){if(!this.fields.data.isEnabled){this.fields.data.isEnabled=phoneTrunk[indTrunk].enable==="Enabled"}if(phoneTrunk[indTrunk].enable==="Enabled"){this.fields.data.protocol=phoneTrunk[indTrunk].signalingProtocol.indexOf("SIP")>=0?"sip":"h323";for(indLine=0;indLine<phoneTrunk[indTrunk].trunk_lines.length;indLine+=1){this.fields.data.connectionList.push({connectionId:phoneTrunk[indTrunk].trunk_lines[indLine].name,userFriendlyName:phoneTrunk[indTrunk].trunk_lines[indLine].name,phoneNumber:phoneTrunk[indTrunk].trunk_lines[indLine].directoryNumber,isEnabled:phoneTrunk[indTrunk].trunk_lines[indLine].enable==="Enabled",state:phoneTrunk[indTrunk].trunk_lines[indLine].status==="Up"?"UP":"DOWN"});if(phoneTrunk[indTrunk].trunk_lines[indLine].groupId){this.fields.groupIdList[phoneTrunk[indTrunk].trunk_lines[indLine].groupId]=phoneTrunk[indTrunk].trunk_lines[indLine].name}}}}}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listGroups","3",this)}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;case"3":if(aResult.status===0||aResult.status===true){phoneGroup=aResult.data;if(phoneGroup!==undefined){for(indGroup=0;indGroup<phoneGroup.length;indGroup+=1){if(phoneGroup[indGroup].group_id&&this.fields.groupIdList.hasOwnProperty(phoneGroup[indGroup].group_id)){epNames=[];for(indDevice=0;indDevice<phoneGroup[indGroup].ep_names.length;indDevice+=1){if(this.fields.deviceIdList.indexOf(phoneGroup[indGroup].ep_names[indDevice])>=0){epNames.push(phoneGroup[indGroup].ep_names[indDevice])}}this.fields.data.incomingList[this.fields.groupIdList[phoneGroup[indGroup].group_id]]=epNames}}}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}},setPhoneIncomingList:{name:"Configures the incomming calls",description:"This method configures the incomming calls",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},incomingList:{}},call:function(aStep,aResult){var result,configObj,group,groupList,phoneTrunk,indTrunk,indLine,groupIdList;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.incomingList=configObj.incomingList;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listTrunks","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){phoneTrunk=aResult.data;groupIdList={};if(phoneTrunk!==undefined){for(indTrunk=0;indTrunk<phoneTrunk.length;indTrunk+=1){if(phoneTrunk[indTrunk].enable==="Enabled"){for(indLine=0;indLine<phoneTrunk[indTrunk].trunk_lines.length;indLine+=1){if(phoneTrunk[indTrunk].trunk_lines[indLine].groupId){groupIdList[phoneTrunk[indTrunk].trunk_lines[indLine].name]=phoneTrunk[indTrunk].trunk_lines[indLine].groupId}}}}}groupList=[];for(group in this.fields.incomingList){if(this.fields.incomingList.hasOwnProperty(group)&&groupIdList.hasOwnProperty(group)){groupList.push({group_id:groupIdList[group],ep_names:this.fields.incomingList[group]})}}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.setGroups","2",this,{groups:groupList})}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setPhoneOutgoingList:{name:"Configures the outgoing calls",description:"This method configures the outgoing calls",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},outgoingList:null},call:function(aStep,aResult){var result,configObj,deviceId,outgoingObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.outgoingList=[];for(deviceId in configObj.outgoingList){if(configObj.outgoingList.hasOwnProperty(deviceId)){this.fields.outgoingList.push({deviceId:deviceId,outgoingList:configObj.outgoingList[deviceId]})}}this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.outgoingList.length>0){outgoingObj=this.fields.outgoingList.pop();this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.setHandset","2",this,{line:{line:outgoingObj.deviceId,outgoingTrunkLine:outgoingObj.outgoingList[0]}})}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setPhoneDeviceName:{name:"Configures the device names",description:"This method configures the device names",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},deviceIdList:null},call:function(aStep,aResult){var result,configObj,device;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.deviceIdList=basicUtilities.cloneObj(configObj.deviceIdList);this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.deviceIdList.length>0){device=this.fields.deviceIdList.pop();this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.setHandsetName","2",this,{line:device.deviceId,name:device.userFriendlyName})}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},setPhoneConnectionName:{name:"Configures the connection names",description:"This method configures the connection names",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},connectionIdList:null},call:function(aStep,aResult){var result,configObj,connection;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.connectionIdList=basicUtilities.cloneObj(configObj.connectionIdList);this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.connectionIdList.length>0){connection=this.fields.connectionIdList.pop()}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getSipMap:{name:"Returns a description of the sip map.",description:"This method returns a description of the sip map.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},deviceIdList:null,connectionIdList:null,groupIdList:null},call:function(aStep,aResult){var result,indDevice,indTrunk,indLine,indGroup,phoneTrunk,phoneDevice,phoneGroup,epNames;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.deviceIdList=[];this.fields.connectionIdList=[];this.fields.groupIdList={};this.fields.data={protocol:"sip",isEnabled:false,deviceList:[],connectionList:[],incomingList:{},outgoingList:{}};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listHandsets","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){phoneDevice=aResult.data;if(phoneDevice!==undefined){for(indDevice=0;indDevice<phoneDevice.length;indDevice+=1){if(phoneDevice[indDevice].endpointType==="SIP"){this.fields.data.deviceList.push({deviceId:phoneDevice[indDevice].line,deviceType:phoneDevice[indDevice].endpointType,isEnabled:phoneDevice[indDevice].enable==="Enabled",state:phoneDevice[indDevice].status==="Up"?"UP":"DOWN",userFriendlyName:phoneDevice[indDevice].name,internalPhoneNumber:phoneDevice[indDevice].directoryNumber});this.fields.deviceIdList.push(phoneDevice[indDevice].line);this.fields.data.outgoingList[phoneDevice[indDevice].line]=[phoneDevice[indDevice].outgoingTrunkLine]}}}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listTrunks","2",this)}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0||aResult.status===true){phoneTrunk=aResult.data;if(phoneTrunk!==undefined){for(indTrunk=0;indTrunk<phoneTrunk.length;indTrunk+=1){if(!this.fields.data.isEnabled){this.fields.data.isEnabled=phoneTrunk[indTrunk].enable==="Enabled"}if(phoneTrunk[indTrunk].enable==="Enabled"){this.fields.data.protocol=phoneTrunk[indTrunk].signalingProtocol.indexOf("SIP")>=0?"sip":"h323";for(indLine=0;indLine<phoneTrunk[indTrunk].trunk_lines.length;indLine+=1){this.fields.data.connectionList.push({connectionId:phoneTrunk[indTrunk].trunk_lines[indLine].name,userFriendlyName:phoneTrunk[indTrunk].trunk_lines[indLine].name,phoneNumber:phoneTrunk[indTrunk].trunk_lines[indLine].directoryNumber,isEnabled:phoneTrunk[indTrunk].trunk_lines[indLine].enable==="Enabled"});if(phoneTrunk[indTrunk].trunk_lines[indLine].groupId){this.fields.groupIdList[phoneTrunk[indTrunk].trunk_lines[indLine].groupId]=phoneTrunk[indTrunk].trunk_lines[indLine].name}}}}}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.listGroups","3",this)}else{callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status===0||aResult.status===true){phoneGroup=aResult.data;if(phoneGroup!==undefined){for(indGroup=0;indGroup<phoneGroup.length;indGroup+=1){if(phoneGroup[indGroup].group_id&&this.fields.groupIdList.hasOwnProperty(phoneGroup[indGroup].group_id)){epNames=[];for(indDevice=0;indDevice<phoneGroup[indGroup].ep_names.length;indDevice+=1){if(this.fields.deviceIdList.indexOf(phoneGroup[indGroup].ep_names[indDevice])>=0){epNames.push(phoneGroup[indGroup].ep_names[indDevice])}}this.fields.data.incomingList[this.fields.groupIdList[phoneGroup[indGroup].group_id]]=epNames}}}}else{callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},addSipAccount:{name:"Adds a SIP account",description:"This method adds a SIP account",fields:{uuid:null,nbStep:0,mxStep:0,status:0,outgoingList:null},call:function(aStep,aResult){var result,configObj,device;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.nbStep=0;this.fields.mxStep=0;device={};if(typeof configObj.deviceId==="string"){device.line=configObj.deviceId;if(typeof configObj.userFriendlyName==="string"){device.name=configObj.userFriendlyName}if(typeof configObj.internalPhoneNumber==="string"){device.directoryNumber=configObj.internalPhoneNumber}if(typeof configObj.isEnabled==="boolean"){device.enable=configObj.isEnabled?"Enabled":"Disabled"}this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.setHandset","1",this,{line:device})}else{callStack.logMessage("SYN_BAD_ARGS","Missing mandatory parameters");this.fields.status=-1}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},updateSipAccount:{name:"Configures a SIP account",description:"This method configures a SIP account",fields:{uuid:null,nbStep:0,mxStep:0,status:0,outgoingList:null},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;configObj=aResult.inputList[0];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.setHandset","1",this,{line:{line:configObj.deviceId,enable:configObj.isEnabled?"Enabled":"Disabled"}})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},deleteSipAccount:{name:"deleteSipAccount",description:"Deletes SIP accounts",fields:{uuid:null,nbStep:0,mxStep:0,status:0,deviceIdList:null},call:function(aStep,aResult){var result,configObj,deviceId;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.deviceIdList=basicUtilities.cloneObj(configObj.deviceIdList);this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.deviceIdList.length>0){deviceId=this.fields.deviceIdList.pop();this.fields.mxStep+=1;callStack.push("api","pcb.VoiceService.deleteHandset","2",this,{line:deviceId})}break;case"2":if(aResult.status===0||aResult.status===true){this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.status=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}});