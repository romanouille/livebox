define(["utils/console","engine/callStack"],function(console,callStack){"use strict";return{listStorages:{name:"Lists available storage devices",description:"This method returns the list of all available storage devices.",fields:{uuid:null,nbStep:0,mxStep:0,deviceList:[],deviceId:-1,deviceDesc:null,volumeList:{},volumeId:-1,status:0,data:{}},call:function(aStep,aResult){var result,listDevice,indDevice,objDevice;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={deviceList:[]};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.deviceList=[];this.fields.deviceId=-1;this.fields.deviceDesc=null;this.fields.volumeList=[];this.fields.volumeId=-1;this.fields.mxStep+=1;if(callStack.isOnHgw()){callStack.push("api","pcb.Devices.getDevice","6",this,{expression:"physical && storage and .Active==true"})}else{callStack.push("api","com.softathome.System.Storage.Device.List","1",this)}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0){this.fields.deviceList=aResult.data.device_list;this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.deviceList.length>0){this.fields.deviceId=this.fields.deviceList.pop();this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetInfo","3",this,{device_id:this.fields.deviceId})}break;case"3":if(aResult.status===0){this.fields.deviceDesc={deviceId:aResult.data.device_id,name:aResult.data.name,vendor:aResult.data.vendor,model:aResult.data.model,serialNumber:aResult.data.serial_number,connectionType:"",isRemovable:aResult.data.removable,capacity:aResult.data.capacity,volumeList:[]};if(aResult.data.type==="2"){this.fields.deviceDesc.connectionType="usb"}else if(aResult.data.type==="1"){this.fields.deviceDesc.connectionType="hdd"}else if(aResult.data.type==="3"){this.fields.deviceDesc.connectionType="nand"}this.fields.volumeList=aResult.data.volume_id;this.fields.mxStep+=1;callStack.reCall(this,"4",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(this.fields.volumeList.length>0){this.fields.volumeId=this.fields.volumeList.pop();this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.GetInfo","5",this,{volume_id:this.fields.volumeId})}else{this.fields.data.deviceList.push(this.fields.deviceDesc);this.fields.deviceDesc=null;this.fields.mxStep+=1;callStack.reCall(this,"2",0)}break;case"5":if(aResult.status===0){this.fields.deviceDesc.volumeList.push({volumeId:aResult.data.volume_id,name:aResult.data.name,fileSystem:aResult.data.fs,totalSpace:aResult.data.size,usedSpace:aResult.data.used_space,freeSpace:aResult.data.free_space,isMounted:aResult.data.mount_state,mountPoint:aResult.data.mount_path});this.fields.mxStep+=1;callStack.reCall(this,"4",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"6":if(aResult.status===0||aResult.status===true){listDevice=aResult.data;for(indDevice=0;indDevice<listDevice.length;indDevice+=1){objDevice={deviceId:listDevice[indDevice].Key,name:listDevice[indDevice].Name,vendor:listDevice[indDevice].Manufacturer,model:"",serialNumber:listDevice[indDevice].SerialNumber,connectionType:"",isRemovable:"",capacity:listDevice[indDevice].Capacity,volumeList:[]};this.fields.deviceList.push(objDevice)}this.fields.mxStep+=1;callStack.reCall(this,"7",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"7":if(this.fields.deviceList.length>0){this.fields.deviceDesc=this.fields.deviceList.pop();this.fields.mxStep+=1;callStack.push("api","pcb.Devices.topology","8",this,this.fields.deviceDesc.deviceId,{})}break;case"8":if(aResult.status===0||aResult.status===true){if(aResult.data[0].Children){listDevice=aResult.data[0].Children;for(indDevice=0;indDevice<listDevice.length;indDevice+=1){this.fields.volumeList.push({uri:listDevice[indDevice].LogicalVolumeIndex,key:listDevice[indDevice].Key,name:listDevice[indDevice].Name})}}this.fields.mxStep+=1;callStack.reCall(this,"9",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"9":if(this.fields.volumeList.length>0){this.fields.volumeId=this.fields.volumeList.pop();this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.getLogicalVolume","10",this,{uri:this.fields.volumeId.uri})}else{this.fields.data.deviceList.push(this.fields.deviceDesc);this.fields.deviceDesc=null;this.fields.mxStep+=1;callStack.reCall(this,"7",0)}break;case"10":if(aResult.status===0||aResult.status===true){objDevice=aResult.data;this.fields.deviceDesc.volumeList.push({volumeId:this.fields.volumeId.uri,name:this.fields.volumeId.name,fileSystem:objDevice.fileSystem,totalSpace:objDevice.capacity,usedSpace:objDevice.usedSpace,freeSpace:parseInt(objDevice.capacity,10)-parseInt(objDevice.usedSpace,10),isMounted:objDevice.enable,mountPoint:objDevice.mountPoint});this.fields.deviceDesc.vendor=objDevice.PhysicalMedium.vendor;this.fields.deviceDesc.model=objDevice.PhysicalMedium.model;this.fields.mxStep+=1;callStack.reCall(this,"9",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getStorageHddState:{name:"Returns the current state of the storage HDD",description:"This method returns the current state of the storage HDD.",fields:{uuid:null,nbStep:0,mxStep:0,deviceList:null,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={isAvailable:false,isPaired:false,isAssociated:false};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.deviceList=[];this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetPairingState","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0){if(parseInt(aResult.data.result,10)===0){this.fields.data={isAvailable:true,isPaired:true,isAssociated:true};this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetAssociationState","5",this)}else if(parseInt(aResult.data.result,10)===2){this.fields.data={isAvailable:false,isPaired:false,isAssociated:false}}else{this.fields.data={isAvailable:true,isPaired:false,isAssociated:false}}}else if(aResult.status===-999||aResult.status===-1005){callStack.logMessage("SEM_VALUE_WORK","Ignoring HDD pairing state as API is not available");this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.List","2",this)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0){this.fields.deviceList=aResult.data.device_list;this.fields.mxStep+=1;callStack.reCall(this,"3",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(this.fields.deviceList.length>0){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetInfo","4",this,{device_id:this.fields.deviceList.pop()})}else{this.fields.data={isAvailable:false,isPaired:false,isAssociated:false}}break;case"4":if(aResult.status===0){if(aResult.data.type==="1"){this.fields.data={isAvailable:true,isPaired:true,isAssociated:true};this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetAssociationState","5",this)}else{this.fields.mxStep+=1;callStack.reCall(this,"3",0)}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"5":if(aResult.status===0){this.fields.data.isAssociated=parseInt(aResult.data.result,10)===1}else if(aResult.status===-999||aResult.status===-1005){callStack.logMessage("SEM_VALUE_WORK","Ignoring HDD association state as API is not available");this.fields.data.isAssociated=true}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},associateStorageHdd:{name:"Associates the storage HDD with the device",description:"This method associates the storage HDD with the current device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.Associate","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},mountStorage:{name:"Mounts a volume of a storage device",description:"This method mounts a volume of a storage device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.mxStep+=1;if(callStack.isOnHgw()){callStack.reCall(this,"2",0)}else{callStack.push("api","com.softathome.System.Storage.Volume.Mount","1",this,{volume_id:configObj.volumeId})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":this.fields.status=0;this.fields.data=true;break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},unmountStorage:{name:"Unmounts a volume of a storage device",description:"This method unmounts a volume of a storage device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.mxStep+=1;if(callStack.isOnHgw()){callStack.push("api","pcb.StorageService.ejectLogicalVolume","1",this,{uri:configObj.volumeId})}else{callStack.push("api","com.softathome.System.Storage.Volume.UnMount","1",this,{volume_id:configObj.volumeId})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},isStorageUsed:{name:"Check a volume of a storage device",description:"This method checks a volume of a storage device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.mxStep+=1;callStack.push("api","pcb.StorageService.checkLogicalVolumeUsed","1",this,{uri:configObj.volumeId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0||aResult.status===false){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},startStorageFormatting:{name:"Starts formatting a storage device or a volume",description:"This method starts formatting a storage device or a volume.",fields:{uuid:null,nbStep:0,mxStep:0,configObj:null,status:0,data:{},volumeList:null,volumeId:0},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.volumeList=[];this.fields.configObj=aResult.inputList[0];if(typeof this.fields.configObj.volumeId==="undefined"){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.GetInfo","1",this,{device_id:this.fields.configObj.deviceId})}else{this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.GetInfo","6",this,{volume_id:this.fields.configObj.volumeId})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0){this.fields.volumeList=aResult.data.volume_id;this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.volumeList.length>0){this.fields.volumeId=this.fields.volumeList.pop();this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.GetInfo","3",this,{volume_id:this.fields.volumeId})}else{this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.Format","5",this,{device_id:this.fields.configObj.deviceId})}break;case"3":if(aResult.status===0){if(aResult.data.mount_state){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.UnMount","4",this,{volume_id:this.fields.volumeId})}else{this.fields.mxStep+=1;callStack.reCall(this,"2",0)}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(aResult.status===0){this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"5":if(aResult.status!==0){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"6":if(aResult.status===0){callStack.cache.set("volumeInfo",aResult.data);if(aResult.data.mount_state){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.UnMount","7",this,{volume_id:this.fields.configObj.volumeId})}else{this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.Format","5",this,{volume_id:this.fields.configObj.volumeId})}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"7":if(aResult.status===0){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.Format","5",this,{volume_id:this.fields.configObj.volumeId})}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getStorageFormattingState:{name:"Returns the current state of a storage format operation",description:"This method returns the current state of a storage format operation.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{},configObj:null},call:function(aStep,aResult){var result,volumeInfo;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={isRunning:false};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.configObj=aResult.inputList[0];if(typeof this.fields.configObj.volumeId==="undefined"){this.fields.data.deviceId=this.fields.configObj.deviceId;this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Device.FormatProgress","1",this,{device_id:this.fields.configObj.deviceId})}else{this.fields.data.volumeId=this.fields.configObj.volumeId;this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.FormatProgress","2",this,{volume_id:this.fields.configObj.volumeId})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0){this.fields.data.isRunning=true}else if(aResult.status===100){this.fields.data.isRunning=false}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(aResult.status===0){this.fields.data.isRunning=true}else if(aResult.status===100){this.fields.data.isRunning=false;volumeInfo=callStack.cache.get("volumeInfo");if(volumeInfo.mount_state){this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.Mount","3",this,{volume_id:this.fields.configObj.volumeId})}}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"3":if(aResult.status!==0){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},startStorageHddCheck:{name:"Starts checking a storage HDD device",description:"This method starts SMART check operation on a storage HDD device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.mxStep+=1;if(callStack.isOnHgw()){callStack.push("api","pcb.StorageService.startSMARTCheck","1",this,{uri:configObj.deviceId,type:configObj.checkMethod===0?"short":"extended"})}else{callStack.push("api","com.softathome.System.Storage.SmartCheck.Start","1",this,{device_id:configObj.deviceId,type:configObj.checkMethod===0?"short":"extended"})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},stopStorageHddCheck:{name:"Stops checking a storage HDD device",description:"This method stops SMART check operation on a storage HDD device.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data=null;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.SmartCheck.Stop","1",this,{device_id:configObj.deviceId})}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status!==0&&aResult.status!==true){this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getStorageHddCheckState:{name:"Returns the current state of a SMART check operation",description:"This method returns the current state of a SMART check operation.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;configObj=aResult.inputList[0];this.fields.data={deviceId:configObj.deviceId,isRunning:false,lastError:0,progress:-1};this.fields.mxStep+=1;if(callStack.isOnHgw()){callStack.push("api","pcb.StorageService.getSMARTCheckStatus","1",this,{uri:configObj.deviceId})}else{callStack.push("api","com.softathome.System.Storage.SmartCheck.GetStatus","1",this,{device_id:configObj.deviceId})}}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){this.fields.data.lastError=0;this.fields.data.progress=aResult.data.progression;this.fields.data.isRunning=this.fields.data.progress<100}else if(aResult.status<-9&&aResult.status<-18){this.fields.data.isRunning=false;this.fields.data.lastError=aResult.status;this.fields.data.progress=-1}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},listStorageServices:{name:"Lists available storage services",description:"This method returns the list of all available storage services.",fields:{uuid:null,nbStep:0,mxStep:0,serviceList:[],service:"",volumeList:[],volume:null,resObj:null,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.data=null;this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Service.List","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0){this.fields.data={serviceList:[]};this.fields.serviceList=aResult.data.storage_service_list;this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"2":if(this.fields.serviceList.length>0){this.fields.service=this.fields.serviceList.pop();this.fields.resObj={serviceId:this.fields.service,volumeList:[]};this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Service.GetInfo","3",this,{storage_service_id:this.fields.service})}break;case"3":if(aResult.status===0){this.fields.volumeList=aResult.data.volume_list;this.fields.mxStep+=1;callStack.reCall(this,"4",0)}else if(aResult.status===-10){callStack.logMessage("SEM_VALUE_WORK","No way to detect whether API com.softathome.System.Storage.Service.GetInfo() failed because of missing USB volume or something else");this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;case"4":if(this.fields.volumeList.length>0){this.fields.volume=this.fields.volumeList.pop();this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Volume.GetInfo","5",this,{volume_id:this.fields.volume.volume_id})}else{this.fields.data.serviceList.push(this.fields.resObj);this.fields.mxStep+=1;callStack.reCall(this,"2",0)}break;case"5":if(aResult.status===0){this.fields.resObj.volumeList.push({deviceId:aResult.data.device_id,volumeId:aResult.data.volume_id,name:aResult.data.name,priority:this.fields.volume.priority,quota:this.fields.volume.quota,fileSystem:aResult.data.fs,totalSpace:aResult.data.size,usedSpace:aResult.data.used_space,freeSpace:aResult.data.free_space,isMounted:aResult.data.mount_state,mountPoint:aResult.data.mount_path});this.fields.mxStep+=1;callStack.reCall(this,"4",0)}else if(aResult.status===-10){callStack.logMessage("SEM_VALUE_WORK","No way to detect whether API com.softathome.System.Storage.Volume.GetInfo() failed because of missing USB volume or something else");this.fields.mxStep+=1;callStack.reCall(this,"4",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},updateStorageServices:{name:"Updates storage services",description:"This method updates storage services by setting priorities and quota.",fields:{uuid:null,nbStep:0,mxStep:0,serviceList:[],service:null,volumeList:[],volume:null,resObj:null,status:0,data:{}},call:function(aStep,aResult){var result;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.nbStep=0;this.fields.mxStep=0;this.fields.data=null;this.fields.serviceList=aResult.inputList[0].serviceList;this.fields.mxStep+=1;callStack.reCall(this,"1",0)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(this.fields.serviceList.length>0){this.fields.service=this.fields.serviceList.pop();this.fields.volumeList=this.fields.service.volumeList;this.fields.mxStep+=1;callStack.reCall(this,"2",0)}break;case"2":if(this.fields.volumeList.length>0){this.fields.volume=this.fields.volumeList.pop();this.fields.mxStep+=1;callStack.push("api","com.softathome.System.Storage.Service.SetInfo","3",this,{storage_service_id:this.fields.service.serviceId,volume_id:this.fields.volume.volumeId,quota:this.fields.volume.quota,priority:this.fields.volume.priority})}else{this.fields.mxStep+=1;callStack.reCall(this,"1",0)}break;case"3":if(aResult.status===0){this.fields.mxStep+=1;callStack.reCall(this,"2",0)}else{this.fields.status=-1;this.fields.mxStep=-1;callStack.logMessage("SEM_SYN_ERROR")}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}},getUsbPortConfiguration:{name:"Retrieves the current Configuration of the Usb Ports",description:"This method returns the current Configuration of the Usb Ports.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,output,indexPort;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.mode={3:"phone",7:"printer",8:"massstorage"};this.fields.data={};this.fields.data.portList=[{portId:"Port1",isEnabled:false,usageMode:"undefined"},{portId:"Port2",isEnabled:false,usageMode:"undefined"}];this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;callStack.push("api","pcb.USBHosts.getDevices","1",this)}else{this.fields.nbStep+=1;switch(aStep){case"1":if(aResult.status===0||aResult.status===true){output=aResult.data;for(indexPort=0;indexPort<output.length;indexPort+=1){if(output[indexPort].physicalPort===this.fields.data.portList[0].portId){this.fields.data.portList[0].portId=output[indexPort].physicalPort;this.fields.data.portList[0].isEnabled=true;if(this.fields.mode[output[indexPort].classes[0]]){this.fields.data.portList[0].usageMode=this.fields.mode[output[indexPort].classes[0]]}}else if(output[indexPort].physicalPort===this.fields.data.portList[1].portId){this.fields.data.portList[1].portId=output[indexPort].physicalPort;this.fields.data.portList[1].isEnabled=true;if(this.fields.mode[output[indexPort].classes[0]]){this.fields.data.portList[1].usageMode=this.fields.mode[output[indexPort].classes[0]]}}}}else{callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}},grantUserAccess:{name:"Define user access rights to an URI",description:"This method configures the current user access rights to a given LogicalVolume.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;configObj=aResult.inputList[0];if(configObj.uri&&configObj.path&&configObj.username&&configObj.hasOwnProperty("permissions")){callStack.push("api","pcb.StorageService.grantUserAccess","1",this,configObj)}}else{this.fields.nbStep+=1;switch(aStep){case"1":console.log(aResult);if(aResult.status!==0&&aResult.status!==true){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}},checkAccessRights:{name:"Retrieves the current Configuration of the Usb Ports",description:"This method returns the current Configuration of the Usb Ports.",fields:{uuid:null,nbStep:0,mxStep:0,status:0,data:{}},call:function(aStep,aResult){var result,configObj;if(aStep==="0"){this.fields.uuid=aResult.uuid;this.fields.status=0;this.fields.data={};this.fields.nbStep=0;this.fields.mxStep=0;this.fields.mxStep+=1;configObj=aResult.inputList[0];if(configObj.uri&&configObj.path&&configObj.username&&configObj.service&&configObj.hasOwnProperty("permissions")){callStack.push("api","pcb.StorageService.checkAccessRights","1",this,configObj)}}else{this.fields.nbStep+=1;switch(aStep){case"1":console.log(aResult);if(aResult.status!==0&&aResult.status!==true){callStack.logMessage("SEM_SYN_ERROR");this.fields.status=-1;this.fields.mxStep=0}break;default:console.warn("Unexpected step '"+aStep+"' in call stack");this.fields.nbStep-=1;break}if(this.fields.nbStep>=this.fields.mxStep){result={status:this.fields.status};if(this.fields.status===0&&this.fields.data){result.data=this.fields.data}callStack.popAll("api",result,this.fields.uuid)}}}}}});