using "UDPEchoConfig.so";

acl {
  group cwmpd read,write,execute;
}

/**
  * plugin according to TR-181 Issue 2 Amendment 2 + EXTRA
  */

/**
  * This object allows the CPE to be configured to perform the UDP Echo Service 
  * defined in [RFC862] and UDP Echo Plus Service defined in [Appendix A.1/TR-143].
  */
persistent object UDPEchoConfig {


  /** The value MUST be the path name of IP-layer interface 
    * over which the CPE MUST listen and receive UDP echo requests on.
    *
    * The value of this parameter MUST be either a valid interface or an empty string.
    * An attempt to set this parameter to a different value MUST be rejected as an invalid parameter value.
    *
    * If an empty string is specified, the CPE MUST listen and receive UDP echo requests on all interfaces.
    *
    * Note: Interfaces behind a NAT MAY require port forwarding rules 
    * configured in the Gateway to enable receiving the UDP packets.
    */
  persistent string Interface {
    constraint custom validateInterface;
    write with writeInterfaceHandler;
    default "";
  }
  
  /** FQDN of Network Test Server to use in IPv4. (EXTRA)*/
  persistent string SourceV4HostName {
    constraint maxvalue 256;
    write with writeHostnameHandler;
  }

  /** FQDN of Network Test Server to use in IPv6. (EXTRA)*/
  persistent string SourceV6HostName {
    constraint maxvalue 256;
    write with writeHostnameHandler;
  }

  /** The Source IPv4 address of the UDP echo packet.
    * The CPE MUST respond to a UDP echo from this source IPv4 address.
    */
  read-only string SourceIPAddress;

  /** The Source IPv6 address of the UDP echo packet.
    * The CPE MUST respond to a UDP echo from this source IPv6 address. (EXTRA)
    */
  read-only string SourceIPv6Address;

  /** The UDP port on which the UDP server MUST listen and respond to UDP echo requests. */
  persistent uint32 UDPPort {
    default 54321;
  }

  /** If true the CPE will perform necessary packet processing for UDP Echo Plus packets. */
  persistent bool EchoPlusEnabled {
    write with start_udpechoconfig;
    default true;
  }

  /** true if UDP Echo Plus is supported. */
  read-only bool EchoPlusSupported;

  /** Incremented upon each valid UDP echo packet received. */
  read-only uint32 PacketsReceived;

  /** Incremented for each UDP echo response sent. */
  read-only uint32 PacketsResponded;

  /** The number of UDP received bytes including payload and 
    * UDP header after the UDPEchoConfig is enabled.
    */
  read-only uint32 BytesReceived;

  /** The number of UDP responded bytes, including payload and 
    * UDP header sent after the UDPEchoConfig is enabled.
    */
  read-only uint32 BytesResponded;

  /** Time in UTC, which MUST be specified to microsecond precision.
    * For example: 2008-04-09T15:01:05.123456,
    * The time that the server receives the first UDP echo packet after the UDPEchoConfig is enabled.
    */
  read-only string TimeFirstPacketReceived;

  /** Time in UTC, which MUST be specified to microsecond precision.
    * For example: 2008-04-09T15:01:05.123456
    * The time that the server receives the most recent UDP echo packet.
    */
  read-only string TimeLastPacketReceived;

  /** MUST be enabled to receive UDP echo. 
    * When enabled from a disabled state all related timestamps, 
    * statistics and UDP Echo Plus counters are cleared.
    */
  persistent bool Enable {
    write with start_udpechoconfig;
    default true;
  }

}

/** @location sah_services_ipdiagnostics /udpechoconfig/UDPEchoConfig.odl */
