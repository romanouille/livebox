# fichier de configuration du serveur web lighttpd

# definition des repertoires
server.document-root = "/www"
server.event-handler = "poll"
server.pid-file = "/var/run/lighttpd.pid"
server.tag ="HTTP Server"
# IPv6
server.use-ipv6 = "enable"
#server.errorlog = "/var/log/lighttpd.log"
#debug.log-condition-handling = "enable"

# idle
server.max-write-idle = 60

# Secure download config
secdownload.secret = "XMO-API"
secdownload.document-root = "/tmp/www/download/"
secdownload.uri-prefix = "/download/"
secdownload.timeout = 60

# Upload config
# Maximum config upload request size in KB
server.max-request-size = 30720 
server.upload-dirs = ( "/tmp/www/upload" )

# modules
server.modules = (
    "mod_cgi",
    "mod_fastcgi",
    "mod_expire",
    "mod_rewrite",
    "mod_redirect",
    "mod_alias",
    "mod_secdownload",
    "mod_setenv",
    )

# GUI version definition
include "conf.d/gui-version.conf"

# Redirection hosts
include "conf.d/urlbox.conf"

$HTTP["url"] =~ "/gui/version.txt" {
  url.access-deny = ( "" )
}

# Server bind configuration (from httpd-smu)
include "conf.d/bind.conf"

# Deny the access to all user which 
# are not in the 10.0.0.0/8 network
#$HTTP["remoteip"] != "10.0.0.0/8" {
#  url.access-deny = ( "" )
#}

# MINE types
include "conf.d/mimetype.conf"

# CGI for WiFi extender
url.rewrite-once = ( "^/(get_getnetworkconf|get_whoareyou)\.cgi$" => "/cgi/wifi-ext" )
cgi.assign = ( "/cgi/wifi-ext" => "" )

url.redirect = (  )

# operator-specific redirections                                                                                                                            
#include "conf.d/redirection.conf"

$HTTP["host"] =~ "^(" + gateway-expr + ")$" {
  url.redirect += ( "^/(|index(/|\.html)?|gui(/|\.html)?)$" => "/" + version + "/gui/" )
  url.redirect += ( "^/gui(|-item)/(.+)$" => "/" + version + "/gui/?item=$2" )
  url.redirect += ( "^/(" + version_expr + "/)?gui-xmo(\.html)?$" => "/" + version + "/gui/gui-xmo.html" )
  url.redirect += ( "^/sav" => "/" + version + "/gui/gui-remote-ssh.html" )
  url.redirect += ( "^/(test|redirect)(/(.*))?$" => "/" + version + "/$1/$3" )
  $HTTP["url"] !~ "^/(" + version_expr + "|cgi|download)/" {
    url.redirect += ( "^/[0-9]+(?:\.[0-9]+)*/(.*)$" => "/" + version + "/$1" )
    url.redirect += ( "^/(.+)$" => "/" + version + "/gui/?item=$1" ) 
  }
  url.rewrite-once += ( "^/" + version_expr + "/gui/(\?.*)?$" => "/" + version + "/gui/index.html" )
}


alias.url = ( "/" + version + "/" => server.document-root + "/" )

$HTTP["url"] =~ "^/" + version_expr + "/test($|/)" {                                             
  dir-listing.activate = "enable"                                                            
}

# Cache
$HTTP["url"] =~ "\.(jpg|gif|png|css|js|json|gtpl)$" {
  expire.url = ( "" => "access 7 days" )
}

$HTTP["url"] =~ "^/download/" {                                                                         
  setenv.add-response-header = ("Content-Disposition" => "attachment")                                  
} 

# fastcgi
#fastcgi.debug = 3
fastcgi.server = (
  "/cgi/json-req" =>
  (( "socket" => "/var/run/.xmo.json-cgi",
      "max-procs" => 10, 
      "min-procs" => 2, 
  )),
  "/cgi/xml-api" =>
  (( "socket" => "/var/run/.xmo.xml-cgi",
      "max-procs" => 10, 
      "min-procs" => 2, 
  )),
  "/cgi/upload" =>
  (( "socket" => "/var/run/.xmo.json-cgi",
      "max-procs" => 1, 
      "min-procs" => 0, 
  )),
)

#$HTTP["url"] =~ "^/tpl/i18n/.+\.gtpl$" {
#  fastcgi.server += (
#    ".gtpl" =>
#    (( "socket" => "/var/run/.get-tpl",
#      "bin-path" => "/bin/get-tpl",
#      "max-procs" => 2, 
#      "min-procs" => 1, 
#    )),
#  )
#}

#
# Include service package configurations
#
include_shell "cat services.d/*.conf"

server.username            = "lighttpd"
server.groupname           = "lighttpd"
