#include "common.inc"
#include "exten_xmo_dir.inc"
#include "exten_keypad.inc"
#include "/tmp/asterisk/exten_xmo_local.inc"
#include "exten_incoming.inc"
#include "/tmp/asterisk/exten_xmo_queue.inc"
#include "exten_ivr.inc"
[globals]
#include "/tmp/asterisk/exten_xmo_globals.inc"
MAINTENANCE_EXTEN=600

[profile_1]
include => common
#include "exten_profile_1.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_2]
include => common
#include "exten_profile_2.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_3]
include => common
#include "exten_profile_3.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_4]
include => common
#include "exten_profile_4.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_5]
include => common
#include "exten_profile_5.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_6]
include => common
#include "exten_profile_6.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_7]
include => common
#include "exten_profile_7.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_8]
include => common
#include "exten_profile_8.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_9]
include => common
#include "exten_profile_9.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[profile_10]
include => common
#include "exten_profile_10.inc"
exten => 3103,1,Macro(voicemail,passwd)
exten => ${DB(IVR/Number)},1,Macro(IVR)

[Handle_Queue]
#include "exten_queue.inc"

[local_static] 
include => voicemail
include => queue
include => local_xmo
exten => ${DB(IVR/Number)},1,Macro(IVR)

[maintenance]
include => keypad_install

[voicemail]
exten => 888,1,Macro(voicemail,passwd)

exten => 3103,1,Macro(voicemail,passwd)

exten => 880,1,Macro(voicemail,login)


[macro-exist_voicemail]
exten => s,1,GotoIf($["${MAILBOX_EXISTS(${ARG1})}"="1"]?:not_exist)
same => n,Macro(voicemail,${ARG1})
same => n(not_exist),hangup(19)

[macro-voicemail]

exten => s,1,Set(GROUP()=voicemail)
same  => n,GotoIf($[${GROUP_COUNT(voicemail)}>${VM_MAX_ACCESS}]?hangup)
same  => n,Set(SIP_CODEC=g729)
same  => n,Answer()
same  => n(test_forward),GotoIf($[${EXISTS(${forwards})}=1]?save_msg_cf)
same  => n,GotoIf($[${ARG1}=login]?login)
same  => n,GotoIf($[${ARG1}!=passwd]?save_msg)
same  => n,VoiceMailMain(${CALLERID(num)})
same  => n,Hangup()

same  => n(login),VoiceMailMain()
same  => n,Hangup()

same  => n(save_msg_cf),Set(VM_BOX=${IF($[ "${DB(${forwards:1:3}/LastForwardEnable)}"="1" ]?${forwards:-3}:${forwards:1:3}  )})
same => n,NoOp(les forwarder=====${forwards}  VM_BOX=====${VM_BOX})
same => n,VoiceMail(${VM_BOX})
same  => n,Hangup()

same => n(save_msg),Voicemail(${ARG1})
same => n,Hangup()
same => n(hangup),Hangup(17)

[macro-process_call]

exten => s,1,GotoIf($["${MACRO_EXTEN}"="${MAINTENANCE_EXTEN}"]?denied:authorized)
same => n(denied),Macro(playback,1,operation-denied)
same => n,Hangup()
same => n(authorized),GotoIf($["${DB(${CALLERID(num)}/PhoneLockEnable)}" = "1"]?hangup:)
same => n,NoOp(macro_exten = ${MACRO_EXTEN} forward =${forwards})
same => n,GotoIf($["${MACRO_EXTEN}" = "${CALLERID(num)}"]?loop:no_loop)
same => n(loop),GotoIf($[${FIELDQTY(forwards, )} = 2]?test_secretary:other_test)
same => n(test_secretary), Noop(CF_TYPE = ${CF_TYPE})
same => n, GotoIf($[${EXISTS(${CF_TYPE})}=0 ]?dial_secretary:voicemail)
;SM=SecretaryManager
same => n(dial_secretary),GotoIf($[${DB(${forwards:1}/FollowMeEnable)}=1]?SM_FM:SM_test_dnd)
same => n(SM_FM),Macro(follow_me,${forwards:1})
same => n(SM_test_dnd),GotoIf($["${DB(Call_Forward/${forwards:1}/DoNotDisturbEnable)}"="1"]?SM_voicemail:dial_SM)
same => n(SM_voicemail),Macro(voicemail,${forwards:1})
same => n(hangup),Hangup()
same => n(dial_SM),macro(dial_local,${forwards:1})
same => n,hangup()

same => n(other_test),GotoIf($[ ${EXISTS(${forwards})} ]?voicemail:play_busy)
same => n(play_busy),Macro(playback,3,number-is-now,busy,retry-later) 
same => n,hangup()
same => n(no_loop),GotoIf($[$[${REGEX("${MACRO_EXTEN}" ${forwards})}] & $["${EXISTS(${BLINDTRANSFER})}"="0"] ]?voicemail:next)
same => n(next),GotoIf($["${FIELDQTY(forwards, )}" > "1"]?:next_test)
same => n,GotoIf($["${DB(Call_Forward/${MACRO_EXTEN}/CallForwardProtection)}"="1"]?deny-cf)
same => n(next_test),Set(forwards=${forwards} ${MACRO_EXTEN})
same => n, Set(CDR(firstdst)=${CUT(forwards, ,2)})
same => n,NoOp(**** ${forwards:1} **** ${CDR(firstdst)} ****)
same => n,GotoIf($["${DB(Call_Forward/${MACRO_EXTEN}/CallForwardUnconditionalEnable)}"="1"]?cfu:test_FM)
same => n(cfu),GotoIf($["${DB(Call_Forward/${MACRO_EXTEN}/CallForwardUnconditionalNumber)}"="${MACRO_EXTEN}"]?test_FM:)
same => n,Goto(${DB(${MACRO_EXTEN}/CF_ProfileID_Exten)},${DB(Call_Forward/${MACRO_EXTEN}/CallForwardUnconditionalNumber)},1)
same => n(test_FM),GotoIf($[${DB(${MACRO_EXTEN}/FollowMeEnable)}=1]?FM:test_dnd)
same => n(FM),Macro(follow_me,${MACRO_EXTEN})
same => n(test_dnd),GotoIf($["${DB(Call_Forward/${MACRO_EXTEN}/DoNotDisturbEnable)}"="1"]?voicemail:dial)
same => n(voicemail),Macro(voicemail,${forwards:1})
same => n(hangup),Hangup()
same => n(deny-cf),Set(denyCF=1)
same => n,Macro(voicemail,${MACRO_EXTEN})
same => n,Hangup()

same => n(dial),Noop(Dialing ${MACRO_EXTEN})
same => n, macro(dial_local,${MACRO_EXTEN})

[macro-dial_local]  
						
exten => s,1,GotoIf($["${denyCF}"="1"]?voicemail)
same => n,GotoIf($["${DEVICE_STATE(SIP/${ARG1})}"="UNAVAILABLE"]?test_cfdi) 
same => n,GotoIf($["${DEVICE_STATE(SIP/${ARG1})}"="BUSY"]?test_cfb)
same => n,GotoIf($["${DEVICE_STATE(SIP/${ARG1})}"="NOT_INUSE"]?firstcall:test_callwaiting)
same => n(firstcall),GotoIf($[ $["${DB(${ARG1}/SimultRingNumber)}"="0"] | $["${EXISTS(${DB(${ARG1}/SimultRingNumber)})}"="0"] ]?noCFNR_simultRing:)
same => n,Set(TIMEOUT=120)
same => n,Set(CallSimultRing=&Local/CallMobile@SimultRing)
same => n,Set(_MobileNumber=SIP/trunk/${DB(${ARG1}/SimultRingNumber)})
same => n,Goto(process_dial)
same => n(noCFNR_simultRing),Set(CallSimultRing=)
same => n,Set(CFNREnable=${DB(Call_Forward/${ARG1}/CallForwardOnNoAnswerEnable)})
same => n,Set(TIMEOUT=${IF($["${CFNREnable}"="1"]?${DB(${ARG1}/CFNR_Timeout)}:${DB(${ARG1}/OVERFLOW_Timeout)})})           
same => n(process_dial),GotoIf($["${is_incomingCall}"="1"]?TestRingBackMode:InternalCall)
same => n(TestRingBackMode),NoOp(PRINT FORWARD TRUNK ${ARG1}  *${forwards}*  testtttttttttttt ${FIELDQTY(forwards, )})
same => n,GotoIf($[ $["${FIELDQTY(forwards, )}"="3"] & $["${DB(Call_Forward/${forwards:1:3}/CallForwardUnconditionalEnable)}"="1"] ]?moh_cfu:)
same => n,GotoIf($["${FIELDQTY(forwards, )}">"2"]?ContinueDialPlan:first_call)
same => n(moh_cfu),Set(Owner_MOH=${forwards:1:3})
same => n,Goto(process_MOH)
same => n(first_call),Set(Owner_Moh=${ARG1})
same => n(process_MOH),GotoIf($["${DB(RingBack_USER/${Owner_Moh}/Enable)}"="1"]?ModeUser:ModeTrunck)
same => n(ModeUser),Set(MOH=m(${Owner_Moh}))
same => n(Mode_2),Answer()
same => n,Wait(1)
same => n,Goto(ContinueDialPlan)
same => n(ModeTrunck),GotoIf($[${RING_BACK}=0]?RingBack_NO:RingBack_YES)
same => n(RingBack_NO),Set(MOH=)
same => n,Goto(ContinueDialPlan)
same => n(RingBack_YES),Set(MOH=m(ringback))
same => n,GotoIf($[${RING_BACK}=1]?Mode_1:Mode_2)
same => n(Mode_1),Answer(1000)
same => n,Wait(1)
same => n,Macro(playback,1,/usr/lib/asterisk/customer/ringback/trunk/RingBackTrunkFileName) 
same => n,Goto(ContinueDialPlan)

same => n(InternalCall),GotoIf($[ $["${FIELDQTY(forwards, )}"="3"] & $["${DB(Call_Forward/${forwards:1:3}/CallForwardUnconditionalEnable)}"="1"] ]?moh_internal_cfu:)
same => n,GotoIf($["${FIELDQTY(forwards, )}">"2"]?ContinueDialPlan:first_internal_call)
same => n(moh_internal_cfu),Set(Owner_MOH=${forwards:1:3})
same => n,Goto(process_internal_MOH)
same => n(first_internal_call),Set(Owner_Moh=${ARG1})
same => n(process_internal_MOH),Set(MOH=${IF($["${DB(RingBack_USER/${Owner_MOH}/Enable)}"="1"]?m(${Owner_MOH}):)})
same => n,NoOp(ring back message ${MOH})

same => n(ContinueDialPlan), GotoIf($[${FIELDQTY(forwards, )} > 2]?add_diversion:simple_dial)
same => n(add_diversion), SIPRemoveHeader(Diversion:)
same => n,NoOp(ggggg ${forwards:-7:3})
same => n,GotoIf($["${DB(Call_Forward/${forwards:-7:3}/SecretForwarderEnable)}"="1"]?simple_dial:)
same => n,SIPAddHeader(Diversion: "${DB(${forwards:-7:3}/ExtensionName)}"<sip:${forwards:-7:3}@192.168.2.1>\;reason=unconditional\;privacy=off\;screen=yes)
same => n(simple_dial),NoOp(${DB(Incoming/Anonymous)} ${CALLERID(num)} )
same => n,Set(first_arg=${IF($[$["${EXISTS(${DB(Incoming/Anonymous)})}"="1"] & $[${REGEX("${DB(Incoming/Anonymous)}" ${CALLERID(num)})}] ]?:${CALLERID(num)})})
same => n,NoOp(forwarddddddddddsssss= ${forwards})
same => n,Set(CLIP=${IF($[ $["${DB(${ARG1}/CLIP)}"="1"] & $["${FIELDQTY(forwards, )}"="2"] ]?M(CLIP^${first_arg}))})

same => n,NoOp(${EXISTS(${DB(${CALLERID(num)}/ExtensionName)})}  ${DB(${CALLERID(num)}/ExtensionName)} ${CALLERID(num)})
same => n,Set(Contact_Type=${IF($[ $["${EXISTS(${DB(${CALLERID(num)}/ExtensionName)})}"="1"] & $["${DB(${CALLERID(num)}/ExtensionName)}"!="${CALLERID(num)}"] ]?internal_contact:)})
same => n,GotoIf($["${EXISTS(${Contact_Type})}"="1"]?Set_Name:)
same => n,Set(Contact_Type=${IF($["${EXISTS(${DB(${CALLERID(num)}/CONTACT_EXT-NAME)})}"="1"]?external_contact:)})
same => n,GotoIf($["${EXISTS(${Contact_Type})}"="1"]?Set_Name:)
same => n,Set(Contact_Type=${IF($["${REGEX(":${CALLERID(num)}#" ${DB(${ARG1}/LIST_PERSO_CONTACT)})}"="1"]?personal_contact:)})
same => n,GotoIf($["${EXISTS(${Contact_Type})}"="1"]?Set_Name:)
same => n,Set(CALLERID(name)=${CALLERID(num)})
same => n(Set_Name),GotoIf($["${EXISTS(${Contact_Type})}"="1"]?:OK_Name)
same => n,Goto(${Contact_Type})
same => n(internal_contact),Set(CALLERID(name)=${DB(${CALLERID(num)}/ExtensionName)})
same => n,Goto(OK_Name)
same => n(external_contact),Set(CALLERID(name)=${DB(${CALLERID(num)}/CONTACT_EXT-NAME)})
same => n,Goto(OK_Name)
same => n(personal_contact),Macro(Name_Contact,${ARG1})
same => n(OK_Name),Set(State_Device=${DEVICE_STATE(SIP/${ARG1})})

same => n,NoOp(BLINDTRANSFER ${BLINDTRANSFER}  refered_channel ${REFERED_CHANNEL}  refered_to_extension ${REFERED_TO_EXTENSION} )
same => n,GotoIf($[${EXISTS(${BLINDTRANSFER})}]?:No-BlindTransfer)
same => n,Set(MOH=${IF($[ $[ "${REGEX("trunk" ${REFERED_CHANNEL})}"="1" ] | $["${is_incomingCall}"="1"]]?m(default):)})

same => n(No-BlindTransfer),GotoIf($[ $["${DB(Trunk/GeneralRinger)}"="0"] | $["${is_incomingCall}"!="1"] ]?No_GeneralRinger:)

same => n,Set(CallGeneralRinger=Local/GRCall@GeneralRinger_1&)
same => n,Set(CallPrincipalGeneralRinger=Local/PrincipalCall@GeneralRinger_2)
same => n,Set(_PrincipalNumber=SIP/${ARG1})
same => n,Set(_GRNumber=SIP/${DB(Trunk/GeneralRinger)})
same => n,NoOp(value CLIIIIIP = ${CLIP})
same => n,Set(_UnderCLIP=${first_arg})
same => n,Dial(${CallGeneralRinger}${CallPrincipalGeneralRinger}${CallSimultRing},${TIMEOUT},${MOH}${CLIP})
same => n,Goto(test_status)
same => n(No_GeneralRinger),Dial(SIP/${ARG1}${CallSimultRing},${TIMEOUT},${MOH}${CLIP})

same => n(test_status),Goto(${DIALSTATUS})
same => n(BUSY), GotoIf($[ $["${DB(${ARG1}/SimultRingNumber)}"="0"] | $["${EXISTS(${DB(${ARG1}/SimultRingNumber)})}"="0"] ]?test_cfb:voicemail)
same => n(NOANSWER),NoOp(${ARG1} "${DEVICE_STATE(SIP/${ARG1})}")
same => n,GotoIf($[ $["${DB(${ARG1}/SimultRingNumber)}"="0"] | $["${EXISTS(${DB(${ARG1}/SimultRingNumber)})}"="0"] ]?:voicemail)
same => n,GotoIf($[ $["${DEVICE_STATE(SIP/${ARG1})}"="INUSE"] | $["${DEVICE_STATE(SIP/${ARG1})}"="RINGINUSE"] | $["${DEVICE_STATE(SIP/${ARG1})}"="ONHOLD"]]?test_cfb:test_cfnr) 
same => n(CHANUNAVAIL), Goto(test_cfdi)
same => n(CANCEL),hangup()
same => n(ANSWER),hangup()
same => n(CONGESTION),hangup()

same => n(test_cfb),GotoIf($["${DB(Call_Forward/${ARG1}/CallForwardOnBusyNumber)}"="${ARG1}"]?voicemail:)
same => n,GotoIf($["${DB(Call_Forward/${ARG1}/CallForwardOnBusyEnable)}"="1"]?cfb:voicemail)
same => n(cfb), Set(CF_TYPE=CFB)
same => n, Goto(${DB(${ARG1}/CF_ProfileID_Exten)},${DB(Call_Forward/${ARG1}/CallForwardOnBusyNumber)},1)

same => n(test_cfnr),GotoIf($["${DB(Call_Forward/${ARG1}/CallForwardOnNoAnswerNumber)}"="${ARG1}"]?voicemail:)
same => n,NoOp(${ARG1}  ${DB(Call_Forward/${ARG1}/CallForwardOnNoAnswerEnable)})
same => n,GotoIf($["${CFNREnable}"="1"]?cfnr:voicemail)
same => n(cfnr),Set(CF_TYPE=CFNR)
same => n, Goto(${DB(${ARG1}/CF_ProfileID_Exten)},${DB(Call_Forward/${ARG1}/CallForwardOnNoAnswerNumber)},1)

same => n(test_cfdi),GotoIf($["${DB(Call_Forward/${ARG1}/CallForwardOnDisconnectedNumber)}"="${ARG1}"]?voicemail:)
same => n,GotoIf($["${DB(Call_Forward/${ARG1}/CallForwardOnDisconnectedEnable)}"="1"]?cfdi:voicemail)
same => n(cfdi), Set(CF_TYPE=CFDI)
same => n,Goto(${DB(${ARG1}/CF_ProfileID_Exten)},${DB(Call_Forward/${ARG1}/CallForwardOnDisconnectedNumber)},1)

same => n(test_callwaiting),GotoIf($["${DB(${ARG1}/CallWaitingEnable)}"="1"]?not_firstcall:test_cfb)
same => n(not_firstcall),GotoIf($[ $["${DB(${ARG1}/SimultRingNumber)}"="0"] | $["${EXISTS(${DB(${ARG1}/SimultRingNumber)})}"="0"] ]?noCFB_simultRing:)
same => n,Set(TIMEOUT=120)
same => n,Set(CallSimultRing=&Local/CallMobile@SimultRing)
same => n,Set(_MobileNumber=SIP/trunk/${DB(${ARG1}/SimultRingNumber)})
same => n,Goto(process_dial)
same => n(noCFB_simultRing),Set(CallSimultRing=)
same => n,Set(TIMEOUT=${IF($["${DB(Call_Forward/${ARG1}/CallForwardOnBusyEnable)}"="1"]?${DB(${ARG1}/CFB_Timeout)}:${DB(${ARG1}/OVERFLOW_Timeout)})})                    
same => n,Goto(process_dial)
same => n(voicemail),GotoIf($[ $["${DB(${ARG1}/CCBSEnable)}"="1"] & $["${State_Device}" != "NOT_INUSE"] & $["${State_Device}" != "RINGING"]]?test_external_call:VM)
same => n(test_external_call),GotoIf($["${is_incomingCall}"="1"]?VM:CCBS_VM)
same => n(CCBS_VM),Macro(CCBS_VM)
same => n(VM),Macro(voicemail,${ARG1})


[GeneralRinger_1]
exten => GRCall,1,Set(CALLERID(name)=)
same => n,SIPRemoveHeader(Diversion:)
same => n,Dial(SIP/${DB(Trunk/GeneralRinger)})
same => n(hangup),Hangup()


[GeneralRinger_2]
exten => PrincipalCall,1,Dial(${PrincipalNumber})
same => n,GotoIf($["${DIALSTATUS}"!="BUSY"]?hangup:)
same => n,SoftHangup(${GRNumber},a)
same => n(hangup),Hangup()

[SimultRing]
exten => CallMobile,1,Set(CALLERID(name)=)
same => n,SIPRemoveHeader(Diversion:)
same => n,Dial(${MobileNumber})
same => n(hangup),Hangup()   


[macro-CCBS_VM]
exten => s,1,NoOp(play CCBS for ${CALLERID(num)} --- ${ARG1} -- ${DB(${ARG1}/CCBSOffered)})
same => n,GotoIf($["${DB(${ARG1}/CCBSOffered)}"!="1" ]?:voicemail)
same => n,GotoIf($["${DB(${CALLERID(num)}/CCBSUsed)}"!="1"  ]?:voicemail)
same => n, Set(CCBS_TO=${ARG1})
same => n,Set(SIP_CODEC=g729)
same => n,Answer()
same => n,Read(INPUT,vm-the_person&vm-is_not_available&ccbs-offer-msg,1,,3,5)
same => n,NoOp(***** ${INPUT} *****)
same => n,GotoIf($["${INPUT}"="1"]?Recall:voicemail)
same => n(Recall),GotoIf($[ "${DB(${ARG1}/CallWaitingEnable)}"="1" ]?make_ccbs:)
same => n,Dial(SIP/${ARG1})
same => n(make_ccbs),CallCompletionRequest()
same => n,Set(DB(${CALLERID(num)}/CCBSTo)=${CCBS_TO})
same => n,Set(DB(${CALLERID(num)}/CCBSTime_Start)=${EPOCH})
same => n,Set(DB(${CALLERID(num)}/CCBSUsed)=1)
same => n,Set(DB(${ARG1}/CCBSOffered)=1)
same => n,NoOp(***** ${CCBS_TO} *****)
same => n,Macro(playback,1,success)
same => n,hangup() 
same => n(voicemail),Macro(voicemail,${ARG1})


[macro-CLIP]
exten => s,1,wait(0.3)
same => n,NoOp(arg1=${ARG1} , ${UnderCLIP} result ==${MACRO_RESULT})
same => n,Set(MACRO_RESULT=BUSY)
same => n,Set(SIP_CODEC=g729)                                                                 
same => n,Answer()                      
same => n,Playback(you-have-a-call&from-number)
same => n,Set(DigitToSay=${IF($["${EXISTS(${ARG1})}"="1"]?${ARG1}:${UnderCLIP})})
same => n,SayDigits(${DigitToSay})
same => n,Playback(hangup-to-refuse)
same => n,wait(3)
same => n,Playback(pbx-transfer)
same => n,Set(MACRO_RESULT=)


[macro-incoming_call]                                     
exten => s,1,Set(caller_num=${CALLERID(num)})                        
same => n,GotoIf($["${caller_num:0:1}"="+"]?plus:process)                       
same => n(plus),Set(len_cc=${LEN(${LOCAL_CC})})                      
same => n,GotoIf($[${caller_num:1:${len_cc}}=${LOCAL_CC}]?local_cc:other_cc)
same => n(local_cc),Set(CALLERID(num)=0${caller_num:$[${len_cc}+1]})             
same => n,goto(process)                                                                                  
same => n(other_cc),Set(CALLERID(num)=00${caller_num:1})                                            
same => n(process),goto(local_static,${ARG1},1)


[macro-Name_Contact]
exten => s,1,Set(Count_Contact=${FIELDQTY(DB(${ARG1}/LIST_PERSO_CONTACT),#)})
same => n,NoOp(countcontact : ${Count_Contact})
same => n,Set(COUNT=1)
same => n,Set(Last_COUNT=$[${Count_Contact} - 1])
same => n,While($[${COUNT} < ${Last_COUNT}])
same => n,Set(One_Contact=${CUT(DB(${ARG1}/LIST_PERSO_CONTACT),#,$[${COUNT}+1])} )
same => n,NoOp(one contact : ${One_Contact})
same => n,GotoIf($[ "${REGEX("${CALLERID(num)}" ${One_Contact})}"="1" ]?:next_contact)
same => n,Set(ID_Contact=${CUT(One_Contact,:,1)})
same => n,Set(CALLERID(name)= ${DB(${ARG1}_Personal_Contact/ID_${ID_Contact})})
same => n,ExitWhile() 
same => n(next_contact),Set(COUNT=$[${COUNT} + 1])
same => n,EndWhile()


[macro-follow_me]
exten => s,1,Set(FM_list=${SORT(FM1:${DB(${ARG1}/FM1/priority)},FM2:${DB(${ARG1}/FM2/priority)},FM3:${DB(${ARG1}/FM3/priority)})})
same => n,NoOp(${FM_list})
same => n,Set(callerid_orig=${CALLERID(num)})
same => n,Set(callerid_orig_name=${CALLERID(name)})
same => n,Set(f=1)
same => n,While($[${f} < 4 ])
same => n,Set(extern_call=0)
same => n,Set(var_FM=${CUT(FM_list,\,,${f})})
same => n,GotoIf($["${EXISTS(${DB(${ARG1}/${var_FM}/number)})}"="1"]?:NEXT_FM)
same => n,Set(CALLERID(num)=${callerid_orig})
same => n,Set(CALLERID(name)=${callerid_orig_name})
same => n,NoOp(numberrrrrrrrrrrrrrrrrr   ${DB(${ARG1}/${var_FM}/number)}   ${CALLERID(num)})
same => n,GotoIf($[ $[${REGEX("^[7][0-9][0-9]$" ${DB(${ARG1}/${var_FM}/number)})}] | $[${REGEX("^[8][0-6][0-9]$" ${DB(${ARG1}/${var_FM}/number)})}]] ?:Next_Short_Test)
same => n,GotoIf($["${EXISTS(${DB(${DB(${ARG1}/${var_FM}/number)}/CONTACT_EXT-SHORT-NUMBER)})}"="1"]?:NEXT_FM)
same => n,Set(Ext_Number_To_Call=${DB(${DB(${ARG1}/${var_FM}/number)}/CONTACT_EXT-SHORT-NUMBER)})
same => n,GotoIf( ${REGEX("^[013][0-9]" ${Ext_Number_To_Call})}?test_external:local_call)

same => n(Next_Short_Test),GotoIf( $[${REGEX("^[8][7][0-9]$" ${DB(${ARG1}/${var_FM}/number)})}] ?:test_external)
same => n,NoOp("#${DB(${ARG1}/${var_FM}/number)}:"   ${DB(${CALLERID(num)}/LIST_PERSO_SHORT-NUM)}  )
same => n,GotoIf($[ "${REGEX("#${DB(${ARG1}/${var_FM}/number)}:" ${DB(${CALLERID(num)}/LIST_PERSO_SHORT-NUM)})}"="1" ]?:NEXT_FM)
same => n,Set(count_contact=${FIELDQTY(DB(${CALLERID(num)}/LIST_PERSO_SHORT-NUM),#)})
same => n,Set(count=1)
same => n,Set(last_count=$[${count_contact} - 1])
same => n,While($[${count} < ${last_count}])
same => n,Set(one_contact=${CUT(DB(${CALLERID(num)}/LIST_PERSO_SHORT-NUM),#,$[${count}+1])})
same => n,NoOp(one contact : ${One_Contact})
same => n,GotoIf($[ "${REGEX("${DB(${ARG1}/${var_FM}/number)}" ${One_Contact})}"="1" ]?:Next_Contact)
same => n,Set(Number_To_Call=${CUT(One_Contact,:,2)})
same => n,NoOp(#${Number_To_Call}#)
same => n,ExitWhile() 
same => n(Next_Contact),Set(count=$[${count} + 1])
same => n,EndWhile()
same => n,Set(Ext_Number_To_Call=${Number_To_Call})
same => n,GotoIf( ${REGEX("^[013][0-9]" ${Ext_Number_To_Call})}?test_external:local_call)

same => n(test_external),NoOp( Ext_numb----${Ext_Number_To_Call}  FM_number---${DB(${ARG1}/${var_FM}/number)})})
same => n,Set(Ext_Number_To_Call=${IF($[ "${EXISTS(${Ext_Number_To_Call})}"="1" ]?${Ext_Number_To_Call}:${DB(${ARG1}/${var_FM}/number)})})
same => n,GotoIf($[ "${Ext_Number_To_Call}" = "${CALLERID(num)}" ]?NEXT_FM)
same => n,GotoIf( ${REGEX("^[013][0-9]" ${Ext_Number_To_Call})}?:local_call)
same => n(set-extern),Set(extern_call=1)
same => n,Goto(make_the_call)
same => n(local_call),GotoIf( $[${EXISTS(${SIPPEER(${Ext_Number_To_Call},context)})}]?:NEXT_FM)
same => n,GotoIf($[$["${DEVICE_STATE(SIP/${Ext_Number_To_Call})}"="BUSY"] | $["${DEVICE_STATE(SIP/${Ext_Number_To_Call})}"="UNAVAILABLE"]]?NEXT_FM)
same => n,GotoIf($[ "${DB(${Ext_Number_To_Call}/CallWaitingEnable)}"="0" ]?:make_the_call)
same => n,GotoIf($[$["${DEVICE_STATE(SIP/${Ext_Number_To_Call})}"="INUSE"] | $["${DEVICE_STATE(SIP/${Ext_Number_To_Call})}"="ONHOLD"]]?NEXT_FM)
same => n(make_the_call),NoOp(timeout_call=${DB(${ARG1}/${var_FM}/timeout)})
same => n,Set(CALLERID(num)=${callerid_orig})
same => n,Set(CALLERID(name)=${callerid_orig_name})
same => n,GotoIf($[ "${extern_call}"="1" ]?trait_exter_call)
same => n,Macro(playback,1,please-wait)
same => n,NoOp(${CALLERID(name)})
same => n,Set(CALLERID(name)=${IF($["${EXISTS(${DB(${CALLERID(num)}/Contact_Last-First_Name)})}"="1"]?${DB(${CALLERID(num)}/Contact_Last-First_Name)}:${CALLERID(name)})})

same => n,GotoIf($[ $["${DB(Trunk/GeneralRinger)}"="0"] | $["${is_incomingCall}"!="1"] ]?No_GeneralRinger_FM:)

same => n,Set(CallGeneralRinger=Local/GRCall@GeneralRinger_1&)
same => n,Set(CallPrincipalGeneralRinger=Local/PrincipalCall@GeneralRinger_2)
same => n,Set(_PrincipalNumber=SIP/${Ext_Number_To_Call})
same => n,Set(_GRNumber=SIP/${DB(Trunk/GeneralRinger)})
same => n,Dial(${CallGeneralRinger}${CallPrincipalGeneralRinger},${DB(${ARG1}/${var_FM}/timeout)},m(default))
same => n,Goto(test_status)

same => n(No_GeneralRinger_FM),Dial(SIP/${Ext_Number_To_Call},${DB(${ARG1}/${var_FM}/timeout)},m(default))

same => n(test_status),Set(Ext_Number_To_Call=)
same => n,Goto(test_dialstatus)
same => n(trait_exter_call),GotoIf($["${DB(Trunck/status)}"="1"]?interface_UP:NEXT_FM)
same => n(interface_UP),Set(GROUP()=MaxSession)
same => n,NoOp(session = ${GROUP_COUNT(MaxSession)})
same => n,GotoIf($[${GROUP_COUNT(MaxSession)}>${MAX_SESSIONS}]?NEXT_FM)

same => n,GotoIf($["${is_incomingCall}"="1"] ?:no_incomingcall) 
same => n(incoming-call),NoOp(Calleridnum = ${CALLERID(num)})
same => n,set(CALLERID(num)=${CIDnum_exter_call})
same => n,set(CALLERID(name)=${CIDname_exter_call})
same => n,Goto(dial_FM_exter)

same => n(no_incomingcall),GotoIf($["${DB(${CALLERID(num)}/AnonymousCallEnable)}"="1"]?anonymous)
same => n(no_anonymous),NoOp(${DB(OutgoingMapTrunk/default)})
same => n,Set(CALLERID(num)=${IF($[ "${EXISTS(${DB(OutgoingMap/${CALLERID(num)})})}"="0" ]?${DB(OutgoingMapTrunk/default)}:${DB(OutgoingMap/${CALLERID(num)})})})
same => n,GotoIf($[ ${EXISTS(${CALLERID(num)})} ]?dial_FM_exter:NEXT_FM)
same => n(anonymous),SIPAddHeader(Privacy:user\;id)
same => n(dial_FM_exter),NoOp(${Ext_Number_To_Call} ${DB(${ARG1}/CF_ProfileID_Exten)} )
same => n,GotoIf($[ "${VALID_EXTENSION(${DB(${ARG1}/CF_ProfileID_Exten)},${Ext_Number_To_Call},1,Macro,Denied)}"="0" ]?:NEXT_FM)
same => n,Macro(playback,1,please-wait)
same => n,Set(CALLERID(name)= ${CALLERID(num)})
same => n,Dial(SIP/trunk/${Ext_Number_To_Call},${DB(${ARG1}/${var_FM}/timeout)},m(default),${DIAL_TRUNK_OPT})
same => n,Set(Ext_Number_To_Call=)
same => n,SIPRemoveHeader(Privacy:)
same => n(test_dialstatus),GotoIf($["${DIALSTATUS}"="ANSWER"]?hangup_FM)
same => n,GotoIf($["${DIALSTATUS}"="CANCEL"]?hangup_FM:NEXT_FM)
same => n(hangup_FM),hangup()
same => n(NEXT_FM),Set(Ext_Number_To_Call=)
same => n,Set(f=$[${f} + 1])
same => n,EndWhile()
same => n,NoOp(${forwards})
same => n,Macro(voicemail)

[macro-Permit]
exten => s,1,NoOp( exten => ${EXTEN} macro-exten => ${MACRO_EXTEN} callerid => ${CALLERID(num)})
same => n,Set(originalCallerID=${CALLERID(num)})
same => n,GotoIf($[ $["${MACRO_EXTEN:0:1}"="1"] | $["${MACRO_EXTEN:0:1}"="3"]]?international_call)
same => n,GotoIf($["${MACRO_EXTEN:1:1}"="0"]?international_call:national_call)
same => n(national_call),GotoIf($["${LEN(${MACRO_EXTEN})}"="10"]?:hangup)
same => n(international_call),GotoIf($["${CALLERID(num)}"="${MAINTENANCE_EXTEN}"]?denied:authorized)
same => n(denied),Macro(playback,1,operation-denied)
same => n,Hangup()
same => n(authorized),GotoIf($["${DB(${CALLERID(num)}/PhoneLockEnable)}" = "1"]?hangup:)
same => n,GotoIf($["${DB(Trunck/status)}"="1"]?interface_UP:hangup_inter_down)
same => n(interface_UP),Set(GROUP()=MaxSession)
same => n,NoOp(session = ${GROUP_COUNT(MaxSession)})
same => n,GotoIf($[${GROUP_COUNT(MaxSession)}>${MAX_SESSIONS}]?hangup_inter_down)
same => n,SIPRemoveHeader(Diversion:)
same => n,NoOp(Test if Is_IncomingCall)
same => n,GotoIf($["${is_incomingCall}"="1"]?incoming-call:)
same => n,GotoIf($["${DB(${CALLERID(num)}/AnonymousCallEnable)}"="1"]?anonymous:nexttest_anonymous)
same => n(nexttest_anonymous),GotoIf($["${privacy_callbycall}"="1"]?anonymous:no_anonymous)
same => n(no_anonymous),NoOp(${DB(OutgoingMapTrunk/default)})
same => n,Set(CALLERID(num)=${IF($[ "${EXISTS(${DB(OutgoingMap/${CALLERID(num)})})}"="0" ]?${DB(OutgoingMapTrunk/default)}:${DB(OutgoingMap/${CALLERID(num)})})})
same => n,GotoIf($[ ${EXISTS(${CALLERID(num)})} ]?normal_call:hangup)
same => n(incoming-call),NoOp(Calleridnum = ${CALLERID(num)} Forwards ${forwards} LastForward ${forwards:-3} group ${DB(list/groups)})
same => n,GotoIf($[ $[${REGEX("${forwards:-3}#" ${DB(list/groups)})}] | $["${DB(Call_Forward/${forwards:-3}/CallForwardPeerDisplay)}" = "FIRST_CALLER"]]?Display_First_Caller:Display_Initiator_CF)
same => n(Display_First_Caller),set(CALLERID(num)=${CIDnum_exter_call})
same => n,set(CALLERID(name)=${CIDname_exter_call})
same => n,Goto(normal_call)
same => n(Display_Initiator_CF),set(CALLERID(num)=${DB(OutgoingMap/${forwards:-3})})
same => n(normal_call),goto(test_FM)
same => n(anonymous),SIPAddHeader(Privacy:user\;id)
same => n(test_FM),GotoIf($["${this_is_followme}"="1"]?goto_followme)
same => n,Set(DIAL_TRUNK_OPT=${IF($[ "${is_incomingCall}"="1" ]?r:)})
same => n,NoOp(calleridname = ${CALLERID(name)} calleridnum = ${CALLERID(num)} )
same => n,NoOp(originalCallerID   ${originalCallerID}  ${REGEX("^[+013][0-9]" ${originalCallerID})})
same => n,Set(CALLERID(name)= ${CALLERID(num)})
same => n,Set(MOH=${IF($["${IVRCall}"="1"]?m(default):)})
same => n,Dial(SIP/trunk/${MACRO_EXTEN},,${MOH}${DIAL_TRUNK_OPT})
same => n(hangup),Hangup(19)
same => n(hangup_inter_down),NoOp(503 Service Unavailable)
same => n,Hangup(19)
same => n(goto_followme),Set(CALLERID(name)= ${CALLERID(num)})
same => n,Dial(SIP/trunk/${MACRO_EXTEN},${ARG1},m(default),${DIAL_TRUNK_OPT})
same => n,Return()

[macro-Denied]
exten => s,1,NoOp(${forwards} *** ${forwards:-3})
same => n,GotoIf($[${FIELDQTY(forwards, )} > 1]?forwarded_call:direct_dial)
same => n(forwarded_call),Macro(voicemail,${forwards:-3})
same => n(direct_dial),Macro(playback,1,no-auth-restriction-profile)
same => n,Hangup()

[macro-Not_Auth]
exten => s,1,Macro(playback,1,no-auth)
same => n,Hangup()


